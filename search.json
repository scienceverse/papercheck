[{"path":"https://scienceverse.github.io/papercheck/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 papercheck authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/batch.html","id":"convert-pdfs","dir":"Articles","previous_headings":"","what":"Convert PDFs","title":"Batch Processing","text":"Read PDF files directory called “pdf”, process local version grobid, save XML files directory called “xml”. read XML files papercheck save object called papers. steps can take time processing lot papers, needs happen , often useful save papers object Rds file, comment code , load papers object future runs script.","code":"pdf2grobid(filename = \"pdf\",             save_path = \"xml\",             grobid_url = \"http://localhost:8070\") papers <- read_grobid(\"xml\") # load from RDS for efficiency # saveRDS(papers, \"psysci_oa.Rds\") papers <- readRDS(\"psysci_oa.Rds\")"},{"path":"https://scienceverse.github.io/papercheck/articles/batch.html","id":"paper-objects","dir":"Articles","previous_headings":"","what":"Paper Objects","title":"Batch Processing","text":"Now papers list papercheck paper objects, contains structured information paper.","code":"paper <- papers[[10]]"},{"path":"https://scienceverse.github.io/papercheck/articles/batch.html","id":"id","dir":"Articles","previous_headings":"Paper Objects","what":"ID","title":"Batch Processing","text":"id taken name xml file.","code":"paper$id #> [1] \"0956797615588467\""},{"path":"https://scienceverse.github.io/papercheck/articles/batch.html","id":"authors","dir":"Articles","previous_headings":"Paper Objects","what":"Authors","title":"Batch Processing","text":"authors list contains list information author. now, CRediT roles detected, may added future. can get authors table paper object list papers.","code":"paper$authors |> str() #> List of 2 #>  $ :List of 5 #>   ..$ orcid      : NULL #>   ..$ name       :List of 2 #>   .. ..$ surname: chr \"Genevsky\" #>   .. ..$ given  : chr \"Alexander\" #>   ..$ roles      : NULL #>   ..$ email      : chr \"genevsky@stanford.edu\" #>   ..$ affiliation:List of 1 #>   .. ..$ :List of 1 #>   .. .. ..$ department: chr \"Department of Psychology\" #>   ..- attr(*, \"class\")= chr [1:2] \"scivrs_author\" \"list\" #>  $ :List of 5 #>   ..$ orcid      : NULL #>   ..$ name       :List of 2 #>   .. ..$ surname: chr \"Knutson\" #>   .. ..$ given  : chr \"Brian\" #>   ..$ roles      : NULL #>   ..$ email      : chr \"\" #>   ..$ affiliation:List of 2 #>   .. ..$ :List of 1 #>   .. .. ..$ department: chr \"Department of Psychology\" #>   .. ..$ :List of 2 #>   .. .. ..$ department : chr \"Stanford Neurosciences Institute\" #>   .. .. ..$ institution: chr \"Stanford University\" #>   ..- attr(*, \"class\")= chr [1:2] \"scivrs_author\" \"list\" #>  - attr(*, \"class\")= chr [1:2] \"scivrs_authors\" \"list\" author_table(psychsci) |>    dplyr::filter(grepl(\"Glasgow\", affiliation)) #> # A tibble: 17 × 7 #>    name.surname name.given  email                  affiliation id        n orcid #>    <chr>        <chr>       <chr>                  <chr>       <chr> <int> <chr> #>  1 Schyns       Philippe G  \"\"                     University… 0956…     3 NA    #>  2 Lages        Martin      \"martin.lages@glasgow… School of … 0956…     1 NA    #>  3 Boyle        Stephanie C \"\"                     Institute … 0956…     2 NA    #>  4 Jones        Benedict C  \"ben.jones@glasgow.ac… Institute … 0956…     1 NA    #>  5 Fisher       Claire I    \"\"                     Institute … 0956…     3 NA    #>  6 Wang         Hongyi      \"\"                     Institute … 0956…     4 NA    #>  7 Kandrik      Michal      \"\"                     Institute … 0956…     5 NA    #>  8 Han          Chengyang   \"\"                     Institute … 0956…     6 NA    #>  9 Fasolt       Vanessa     \"\"                     Institute … 0956…     7 NA    #> 10 Morrison     Danielle    \"\"                     Institute … 0956…     8 NA    #> 11 Lee          Anthony J   \"\"                     Institute … 0956…     9 NA    #> 12 Holzleitner  Iris J      \"\"                     Institute … 0956…    10 NA    #> 13 O'shea       Kieran J    \"\"                     Institute … 0956…    11 NA    #> 14 Debruine     Lisa M      \"\"                     Institute … 0956…    14 NA    #> 15 Jones        Benedict C  \"\"                     Institute … 0956…     2 NA    #> 16 Debruine     Lisa M      \"\"                     Institute … 0956…     3 NA    #> 17 Fasolt       Vanessa     \"\"                     Institute … 0956…     5 NA"},{"path":"https://scienceverse.github.io/papercheck/articles/batch.html","id":"info","dir":"Articles","previous_headings":"Paper Objects","what":"Info","title":"Batch Processing","text":"info item lists filename, title, description (abstract), keywords, doi, submission info. Grobid sometimes makes mistakes DOI, cautious using . can get table batch papers using info_table().","code":"paper$info #> $filename #> [1] \"vignettes/xml/0956797615588467.xml\" #>  #> $title #> [1] \"Affective Mechanisms Predict Microlending\" #>  #> $description #> [1] \"Humans sometimes share with others whom they may never meet or know, in violation of the dictates of pure selfinterest. Research has not established which neuropsychological mechanisms support lending decisions, nor whether their influence extends to markets involving significant financial incentives. In two studies, we found that neural affective mechanisms influence the success of requests for microloans. In a large Internet database of microloan requests (N = 13,500), we found that positive affective features of photographs promoted the success of those requests. We then established that neural activity (i.e., in the nucleus accumbens) and self-reported positive arousal in a neuroimaging sample (N = 28) predicted the success of loan requests on the Internet, above and beyond the effects of the neuroimaging sample's own choices (i.e., to lend or not). These findings suggest that elicitation of positive arousal can promote the success of loan requests, both in the laboratory and on the Internet. They also highlight affective neuroscience's potential to probe neuropsychological mechanisms that drive microlending, enhance the effectiveness of loan requests, and forecast market-level behavior.\" #>  #> $keywords #> [1] \"affect\"       \"accumbens\"    \"microlending\" \"preference\"   \"fMRI\"         #> [6] \"prosocial\"    \"human\"        #>  #> $doi #> [1] \"10.1177/0956797615588467\" #>  #> $submission #> [1] \"Received 2/2/15; Revision accepted 5/4/15\" info_table(papers, info = c(\"doi\", \"title\")) |>    head() #> # A tibble: 6 × 3 #>   id               doi                      title                                #>   <chr>            <chr>                    <chr>                                #> 1 0956797613520608 10.1177/0956797613520608 Continuous Theta-Burst Stimulation … #> 2 0956797614522816 10.1177/0956797614522816 Beyond Gist: Strategic and Incremen… #> 3 0956797614527830 10.1177/0956797614527830 Serotonin and Social Norms: Tryptop… #> 4 0956797614557697 10.1177/0956797614557697 Action-Specific Disruption of Perce… #> 5 0956797614560771 10.1177/0956797614560771 Emotional Vocalizations Are Cross-C… #> 6 0956797614566469 10.1177/0956797614566469 Conspiracist Ideation as a Predicto…"},{"path":"https://scienceverse.github.io/papercheck/articles/batch.html","id":"references","dir":"Articles","previous_headings":"Paper Objects","what":"References","title":"Batch Processing","text":"references contains items reference list, including id link citations (bib_id), DOI available (doi), full reference text (ref).","code":"ref <- paper$references  dplyr::filter(ref, bib_id == \"b5\") #>   bib_id                        doi #> 1     b5 10.1016/j.jcps.2011.05.001 #>                                                                                                                           ref #> 1 A neural predictor of cultural popularity GSBerns SEMoore 10.1016/j.jcps.2011.05.001 Journal of Consumer Psychology 22 2012"},{"path":"https://scienceverse.github.io/papercheck/articles/batch.html","id":"citations","dir":"Articles","previous_headings":"Paper Objects","what":"Citations","title":"Batch Processing","text":"citations contains citation, including id link references (bib_id) sentence cited (text).","code":"cite <- paper$citations  dplyr::filter(cite, bib_id == \"b5\") #>   bib_id #> 1     b5 #> 2     b5 #> 3     b5 #>                                                                                                                                                                                                                                                                                                                  text #> 1                                                                                                                                 Stimulus sample size was determined via power analysis of the sole existing similar study, which used neural activity to predict Internet downloads of music (Berns & Moore, 2012). #> 2                                                       Following the approach of Berns and Moore (2012), we calculated correlations between Internet loan-request success and anticipatory activity in regions drawn from targeted volumes of interest (i.e., NAcc, AIns, and MPFC) as well as whole-brain analyses. #> 3 For instance, investigators have used group NAcc activity in response to music to predict the aggregate number of song downloads 2 years later (Berns & Moore, 2012) and have used group MPFC activity to predict call volume in response to antismoking advertisements (Falk, Berkman, Whalen, & Lieberman, 2011)."},{"path":"https://scienceverse.github.io/papercheck/articles/batch.html","id":"full-text","dir":"Articles","previous_headings":"Paper Objects","what":"Full Text","title":"Batch Processing","text":"full_text item table containing sentence main text (text). heading text (header) used automatically determine section abstract, intro, method, results, discussion. section unique sequential div number, paragraph (p) within section eeach sentence (s) within paragraph also sequentially numbered (e.g., div = 1, p = 2, s = 3 third sentence second paragraph first section abstract).","code":"paper$full_text |> names() #> [1] \"text\"    \"section\" \"header\"  \"div\"     \"p\"       \"s\"       \"id\""},{"path":"https://scienceverse.github.io/papercheck/articles/batch.html","id":"text-search","dir":"Articles","previous_headings":"","what":"Text Search","title":"Batch Processing","text":"search_text() function helps search text paper list papers. default arguments give data frame containing row every sentence every paper set. data frame column structure full_text table , can easily chain text searches. can customise search_text() return paragraphs sections instead sentences. section column contains automatically classified section types options “abstract”, “intro”, “methods”, “results”, “discussion” (can inaccurate grobid doesn’t detect headers header text doesn’t obviously fall one categories). random paragraph method section.","code":"all_sentences <- search_text(papers) method_paragraphs <- search_text(papers, section = \"method\", return = \"paragraph\") #> [1] \"SES. Family SES was assessed by measures at first contact when the TEDS twins were 18 months and when they were 7, 9, and 16 years old. At first contact (SES Index 1), age 7 (SES Index 2), and age 16 (SES Index 4), parents reported their highest educational qualifications and occupation. Educational qualifications were assessed on an 8-point scale from 1 (no formal education) to 8 (postgraduate qualifications). Occupation was inferred on the basis of a standard classification (Office of Population and Census Surveys, 1991) that used reports of employment status, job title, employment type, and whether parents needed special qualifications for their role. At 9 years (SES Index 3) and 16 years, family income was assessed; parents reported their annual household income before tax on an 11-point scale from 1 (under £4,500) to 11 (more than £100,000). For SES Indexes 1 through 3, standardized mean scores were calculated and averaged at each assessment age. Previous analyses of these data showed that correlations (r) between these estimates were .77 for SES Index 1 and 2, .55 for SES Indexes 1 and 3, and .57 for SES Indexes 2 and 3 (Hanscombe et al., 2012). Correlations with SES Index 4 have not been previously reported and were .70 with SES Index 1, .76 with SES Index 2, and .65 with SES Index 6 in the current analysis sample. We summed the four indexes to achieve one SES composite score for each participant.\""},{"path":"https://scienceverse.github.io/papercheck/articles/batch.html","id":"pattern","dir":"Articles","previous_headings":"Text Search","what":"Pattern","title":"Batch Processing","text":"can just code every sentence paragraph set papers, usually efficient, can use search pattern filter text. 4 results. ’ll just show paper id text columns returned table, table also provides section type, header, section, paragraph, sentence numbers (div, p, s).","code":"search <- search_text(papers, pattern = \"Scotland\")"},{"path":"https://scienceverse.github.io/papercheck/articles/batch.html","id":"chaining","dir":"Articles","previous_headings":"Text Search","what":"Chaining","title":"Batch Processing","text":"can chain together searches iteratively narrow results.","code":"search <- papers |>   search_text(\"DeBruine\") |>   search_text(\"2006\")"},{"path":"https://scienceverse.github.io/papercheck/articles/batch.html","id":"regex","dir":"Articles","previous_headings":"Text Search","what":"Regex","title":"Batch Processing","text":"can also use regular expressions refine search. pattern returns every sentence contains either “Scotland” “Scottish”.","code":"search <- search_text(papers, pattern = \"(Scotland|Scottish)\")"},{"path":"https://scienceverse.github.io/papercheck/articles/batch.html","id":"match","dir":"Articles","previous_headings":"Text Search","what":"Match","title":"Batch Processing","text":"can return just matching text regular expression setting results “match”. pattern searches text like “p < .25” p<0.01”. can expand whole sentence, paragraph, +/- number sentences around match using expand_text().","code":"match <- search_text(papers,                       pattern = \"p\\\\s*>\\\\s*0?\\\\.[0-9]+\\\\b\",                       return = \"match\") expand <- expand_text(results_table = match,                        paper = papers,                       expand_to = \"sentence\",                       plus = 0,                       minus = 0)  expand$expanded[1] #> [1] \"No main effects or interactions with time were found (p > .29), which indicates that the action-specific effects of TMS on confidence are not specific to its delivery before or after a perceptual decision.\""},{"path":"https://scienceverse.github.io/papercheck/articles/metascience.html","id":"initial-text-search","dir":"Articles","previous_headings":"","what":"Initial Text Search","title":"Using Papercheck for MetaScience","text":"See batch processing vignette information load multiple PDFs. , load 250 open access papers Psychological Science, previously converted XML grobid read papercheck.","code":"papers <- psychsci"},{"path":"https://scienceverse.github.io/papercheck/articles/metascience.html","id":"fixed-terms","dir":"Articles","previous_headings":"Initial Text Search","what":"Fixed Terms","title":"Using Papercheck for MetaScience","text":"Let’s start fixed search term: “power analysis”. ’ll keep track iteratively developed search terms naming resulting table text_#. 104 results. ’ll just show paper id text columns returned table, table also provides section type, header, section, paragraph, sentence numbers (div, p, s). caught lot sentences term, probably missing . Let’s try general fixed search term: “power”. 744 results. Inspect see false positives.","code":"text_1 <- search_text(papers, pattern = \"power analysis\") text_2 <- search_text(papers, pattern = \"power\")"},{"path":"https://scienceverse.github.io/papercheck/articles/metascience.html","id":"regex","dir":"Articles","previous_headings":"Initial Text Search","what":"Regex","title":"Using Papercheck for MetaScience","text":"quick skim 744 results, can see words like “powerful” never reporting power analysis, try exclude . can use regex make text search bit specific. following pattern requires power followed optionally “ed” word border (like space full stop), match “power” “powered”, “powerful”. 651 results. Inspect false positives .","code":"# test some examples to check the pattern pattern <- \"power(ed)?\\\\b\" yes <- c(\"power\",           \"power.\",           \"power analysis\",           \"powered\") no  <- c(\"powerful\",           \"powerful analysis\") grepl(pattern, yes) #> [1] TRUE TRUE TRUE TRUE grepl(pattern, no) #> [1] FALSE FALSE text_3 <- search_text(papers, pattern)"},{"path":"https://scienceverse.github.io/papercheck/articles/metascience.html","id":"refining-the-search","dir":"Articles","previous_headings":"Initial Text Search","what":"Refining the search","title":"Using Papercheck for MetaScience","text":"can repeat process skimming results refining search term iteratively happy probably caught relevant text don’t many false positives. One useful technique use dplyr::anti_join() check text excluded make search term specific, make sure false negatives.","code":"# rows in text_2 that were excluded in text_3 excluded <- anti_join(text_2, text_3,                        by = c(\"id\", \"div\", \"p\", \"s\"))"},{"path":"https://scienceverse.github.io/papercheck/articles/metascience.html","id":"screening","dir":"Articles","previous_headings":"Initial Text Search","what":"Screening","title":"Using Papercheck for MetaScience","text":"happy search term includes relevant text much irrelevant text, next step save data frame can open spreadsheet application code row ground truth. careful opening files spreadsheet apps like Excel. Sometimes garble special characters like ü , make validation process inaccurate, since expected values spreadsheet exactly match calculated values modules ’re testing. One way fix happened, read excel file R replace text column text column data frame , re-save CSV file.","code":"readr::write_csv(text_3, \"power/power_screening.csv\")"},{"path":[]},{"path":"https://scienceverse.github.io/papercheck/articles/metascience.html","id":"module-creation","dir":"Articles","previous_headings":"Validating a Module","what":"Module Creation","title":"Using Papercheck for MetaScience","text":"validate module, need write search term module. See modules vignette details. Creating module text search straightforward. Just save following text file called “power_0.mod”. traffic_light entry returns “green” paper sentences found, “red” none found. Now test module running papers. returned table identical text_3.","code":"{   \"title\": \"Power Analysis\",   \"description\": \"List all sentences that contain a power analysis.\",   \"text\": {     \"pattern\": \"power(ed)?\\\\b\"   },   \"traffic_light\": {     \"found\": \"green\",     \"not_found\": \"red\"   } } mod_test <- module_run(papers, \"power/power0.mod\") all.equal(mod_test$table, text_3) #> [1] TRUE"},{"path":"https://scienceverse.github.io/papercheck/articles/metascience.html","id":"set-up-validation-files","dir":"Articles","previous_headings":"Validating a Module","what":"Set Up Validation Files","title":"Using Papercheck for MetaScience","text":"ground truth coded best inclusive search term, can validate module start trying improve performance. First, let’s use -inclusive search term. , definition, false negatives, refining module start produce false positives negatives. set two files match module output. First, sample files check. Second, table expected text matches. can get filtering ground truth table just rows true positives (hand-coded column power_computation). Add traffic light sample table determining matches results table.","code":"sample <- data.frame(   id = names(papers) ) ground_truth <- readxl::read_excel(\"power/power_screening_coded.xlsx\") ground_truth$text <- text_3$text # fix problem with excel and special chars  expected <- ground_truth |>   filter(power_computation == 1) |>   select(id, text) sample$traffic_light <- ifelse(   sample$id %in% expected$id,    \"green\", \"red\")"},{"path":"https://scienceverse.github.io/papercheck/articles/metascience.html","id":"validate","dir":"Articles","previous_headings":"Validating a Module","what":"Validate","title":"Using Papercheck for MetaScience","text":"","code":"v0 <- validate(module = \"power/power0.mod\",                sample = sample,                 expected = expected,                 path = \"xml\") v0"},{"path":"https://scienceverse.github.io/papercheck/articles/metascience.html","id":"refine-and-iterate","dir":"Articles","previous_headings":"Validating a Module","what":"Refine and Iterate","title":"Using Papercheck for MetaScience","text":"Refine module improve based coding ground truth. example, perhaps decide almost instances real power analyses contain strings “power” “analys” Duplicate file “power.mod” “power1.mod” change search pattern new one re-run validation. Now matching % tables. ways investigate . Traffic lights can complex “green” “red”, since can also return values like “info”, “na”. values map straightforwardly onto yes , can calculate signal detection measures module. can plot number missing extra results per paper see problem false positives /false negatives.  seem happening , let’s look specifically false alarms misses.","code":"pattern <- \"(analys.*power|power.*analys)\" yes <- c(\"power analysis\",          \"power analyses\",          \"power has an analysis\",          \"analyse power\",          \"analysis is powered at\") no  <- c(\"powered\",          \"power\",          \"analysis\") grepl(pattern, yes) #> [1] TRUE TRUE TRUE TRUE TRUE grepl(pattern, no) #> [1] FALSE FALSE FALSE v1 <- validate(module = \"power/power1.mod\",                sample = sample,                 expected = expected,                 path = \"xml\") v1 tl_accuracy(v1, yes = \"green\", no = \"red\") |> str() #> List of 9 #>  $ hits              : int 77 #>  $ misses            : int 41 #>  $ false_alarms      : int 23 #>  $ correct_rejections: int 109 #>  $ accuracy          : num 0.744 #>  $ sensitivity       : num 0.653 #>  $ specificity       : num 0.174 #>  $ d_prime           : num 1.33 #>  $ beta              : num 1.44 #>  - attr(*, \"class\")= chr \"ppchk_accuracy_measures\" ggplot(v1$sample) +   geom_freqpoly(aes(x = misses), color = \"red\", binwidth = 1) +   geom_freqpoly(aes(x = false_alarms), color = \"blue\", binwidth = 1) +   scale_x_continuous(breaks = 0:10, limits = c(0, 10)) +   labs(x = \"Number of Results Missing (red) or Extra (blue) per Paper\",         y = \"Number of Papers\") false_alarms <- anti_join(v1$table, expected,                            by = c(\"id\", \"text\")) misses <- anti_join(expected, v1$table,                            by = c(\"id\", \"text\"))"},{"path":"https://scienceverse.github.io/papercheck/articles/metascience.html","id":"multi-step-text-search","dir":"Articles","previous_headings":"Validating a Module","what":"Multi-step Text Search","title":"Using Papercheck for MetaScience","text":"Sometime makes sense filter set steps, sentences contain word “power” contain equal sign least one number format “.#” “#%”. can add chained text searches JSON module file like :","code":"results <- papers |>   search_text(\"power(ed)?\\\\b\") |>   search_text(\"(\\\\.[0-9]|[0-9]%)\") {   \"title\": \"Power Analysis\",   \"description\": \"List all sentences that contain the string 'power' and a number.\",   \"text\": {     \"pattern\": \"power(ed)?\\\\b\"   },   \"text\": {     \"pattern\": \"(\\\\.[0-9]|[0-9]%)\"   },   \"traffic_light\": {     \"found\": \"green\",     \"not_found\": \"red\"   } } v2 <- validate(module = \"power/power2.mod\",                sample = sample,                 expected = expected,                 path = \"xml\") v2 tl_accuracy(v2) |> str() #> List of 9 #>  $ hits              : int 113 #>  $ misses            : int 5 #>  $ false_alarms      : int 13 #>  $ correct_rejections: int 119 #>  $ accuracy          : num 0.928 #>  $ sensitivity       : num 0.958 #>  $ specificity       : num 0.0985 #>  $ d_prime           : num 3.01 #>  $ beta              : num 0.52 #>  - attr(*, \"class\")= chr \"ppchk_accuracy_measures\" false_alarms2 <- anti_join(v2$table, expected,                            by = c(\"id\", \"text\")) misses2 <- anti_join(expected, v2$table,                            by = c(\"id\", \"text\"))"},{"path":"https://scienceverse.github.io/papercheck/articles/metascience.html","id":"compare-modules","dir":"Articles","previous_headings":"","what":"Compare modules","title":"Using Papercheck for MetaScience","text":"","code":"data.frame(   module = c(v0$module, v1$module, v2$module),   tables = c(v0$table_matched, v1$table_matched, v2$table_matched),   traffic_lights = c(v0$tl_matched, v1$tl_matched, v2$tl_matched) ) #>             module tables traffic_lights #> 1 power/power0.mod  0.472          0.764 #> 2 power/power1.mod  0.536          0.744 #> 3 power/power2.mod  0.792          0.928"},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"search-strategies","dir":"Articles","previous_headings":"","what":"Search Strategies","title":"Modules","text":"Modules can use four search strategies, JSON specification. four types take either paper object resulting search table input, making easy chain modules together.","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"text-search","dir":"Articles","previous_headings":"Search Strategies","what":"Text Search","title":"Modules","text":"checks can done simple text search, can create module provides arguments search_text() function. “text” key takes dictionary argumants search_text() function. Foe example, following JSON specification defines arguments needed search instances p-values text return just matched text.","code":"{   \"title\": \"List All P-Values\",   \"description\": \"List all p-values in the text, returning the matched text (e.g., 'p = 0.04') and document location in a table.\",   \"text\": {     \"pattern\": \"(?<=[^a-z])p-?(value)?\\\\s*[<>=≤≥]{1,2}\\\\s*(n\\\\.?s\\\\.?|\\\\d?\\\\.\\\\d+e?-?\\\\d*)\",     \"return\": \"match\",     \"perl\": true   } }"},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"code","dir":"Articles","previous_headings":"Search Strategies","what":"Code","title":"Modules","text":"checks require bit logic, can include R code directly (likely) reference external .R file. “code” key takes dictionary “code” “path” file containing code. can optionally list “packages” required users can prompted install unavailable packages. Code must end list contains values return. item table table returned values, optional item traffic_light contains classification result (see ).","code":"{   \"title\": \"Check Status of OSF Links\",   \"description\": \"List all OSF links and whether they are open, closed, or do not exist.\",   \"code\": {     \"packages\": [\"papercheck\", \"httr\", \"dplyr\"],     \"path\": \"osf-check.R\"   } }"},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"machine-learning","dir":"Articles","previous_headings":"Search Strategies","what":"Machine Learning","title":"Modules","text":"machine learning aspect papercheck development, currently uses BERT models classify text. “ml” key takes dictionary arguments ml(), additional optional setting filter output table matching responses.","code":"{   \"title\": \"Sample Size\",   \"description\": \"[DEMO] Classify each sentence for whether it contains sample-size information, returning only sentences with probable sample-size info.\",   \"ml\" : {     \"model_dir\": \"sample-size\",     \"class_col\": \"has_sample_size\",     \"map\": {\"0\": \"no\", \"1\": \"yes\"},     \"return_prob\": false,     \"filter\": \"yes\"   } }"},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"large-language-models","dir":"Articles","previous_headings":"Search Strategies","what":"Large Language Models","title":"Modules","text":"“llm” key takes dictionary arguments llm() function.","code":"{   \"title\": \"Summarise Sections\",   \"description\": \"Generate a 1-sentence summary for each section\",   \"llm\": {     \"query\": \"Summarise this section briefly, in one sentence.\"   } }"},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"report-info","dir":"Articles","previous_headings":"","what":"Report Info","title":"Modules","text":"using modules build report, need specify type output corresponds good practice practice may need improvement. “traffic-light” “report” keys.","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"traffic-lights","dir":"Articles","previous_headings":"Report Info","what":"Traffic Lights","title":"Modules","text":"5 kinds traffic lights: 🟢 problems detected; 🟡 something check; 🔴 possible problems detected; 🔵 informational ; ⚪️ applicable; ⚫️ check failed simplest way set traffic lights specify meaning “found” “not_found”. module produces 0 rows output table, traffic light takes “found” value, otherwise “not_found” value. using “code” type, can also specify traffic light returned list.","code":"{   \"title\": \"List All P-Values\",   \"description\": \"List all p-values in the text, returning the matched text (e.g., 'p = 0.04') and document location in a table.\",   \"text\": {     \"pattern\": \"(?<=[^a-z])p-?(value)?\\\\s*[<>=≤≥]{1,2}\\\\s*(n\\\\.?s\\\\.?|\\\\d?\\\\.\\\\d+e?-?\\\\d*)\",     \"return\": \"match\",     \"perl\": true   },   \"traffic_light\": {     \"found\": \"info\",     \"not_found\": \"na\"   } } # code for imprecise-p module p <- module_run(paper, \"all-p-values\")$table p$p_comp <- gsub(\"p-?(value)?\\\\s*|\\\\s*\\\\d?\\\\.\\\\d+e?-?\\\\d*\", \"\", p$text) p$p_value <- gsub(\"^p-?(value)?\\\\s*[<>=≤≥]{1,2}\\\\s*\", \"\", p$text) p$p_value <- suppressWarnings(as.numeric(p$p_value)) p$imprecise <- p$p_comp == \"<\" & p$p_value > .001 p$imprecise <- p$imprecise | p$p_comp == \">\" p$imprecise <- p$imprecise | is.na(p$p_value) cols <- c(\"text\", \"section\", \"header\", \"div\", \"p\", \"s\", \"id\")  if (nrow(p) == 0) {   tl <- \"na\" } else if (any(p$imprecise)) {   tl <- \"red\" } else if (!all(p$imprecise)) {   tl <- \"green\" } else {   tl <- \"yellow\" }  list(   table = p[p$imprecise, cols],   traffic_light = tl )"},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"report","dir":"Articles","previous_headings":"Report Info","what":"Report","title":"Modules","text":"text want include report specified “report” key. can set different text traffic light, /text include reports.","code":"{   \"title\": \"Reference Consistency\",   \"description\": \"Check if all references are cited and all citations are referenced\",   \"code\": {     \"packages\": [\"dplyr\"],     \"path\": \"ref-consistency.R\"   },   \"report\": {     \"all\": \"This module relies on Grobid correctly parsing the references. There may be some false positives.\",     \"red\": \"There are references that are not cited or citations that are not referenced\",     \"green\": \"All references were cited and citations were referenced\",     \"na\": \"No citations/references were detected\"   } }"},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"authors","dir":"Articles","previous_headings":"Report Info","what":"Authors","title":"Modules","text":"can also include author information following format:","code":"{   \"title\": \"List All P-Values\",   \"description\": \"List all p-values in the text, returning the matched text (e.g., 'p = 0.04') and document location in a table.\",   \"authors\": [{     \"orcid\": \"0000-0002-7523-5539\",     \"name\":{       \"surname\": \"DeBruine\",       \"given\": \"Lisa\"     },     \"email\": \"debruine@gmail.com\"   }],   \"text\": {     \"pattern\": \"(?<=[^a-z])p-?(value)?\\\\s*[<>=≤≥]{1,2}\\\\s*(n\\\\.?s\\\\.?|\\\\d?\\\\.\\\\d+e?-?\\\\d*)\",     \"return\": \"match\",     \"perl\": true   },   \"traffic_light\": {     \"found\": \"info\",     \"not_found\": \"na\"   } }"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"papercheck","text":"can install development version papercheck GitHub : can launch interactive shiny app version code :","code":"# install.packages(\"devtools\") devtools::install_github(\"scienceverse/papercheck\") library(papercheck) papercheck_app()"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"load-from-pdf","dir":"Articles","previous_headings":"Installation","what":"Load from PDF","title":"papercheck","text":"function pdf2grobid() can read PDF files save TEI format created grobid. requires internet connection takes seconds per paper, done results saved later use. server unavailable, can use grobid web interface. can set local grobid server following instructions https://grobid.readthedocs.io/. easiest way use Docker. can set grobid_url local path http://localhost:8070.","code":"pdf_file <- demopdf() xml_file <- pdf2grobid(pdf_file) docker run --rm --init --ulimit core=0 -p 8070:8070 lfoppiano/grobid:0.8.1 xml_file <- pdf2grobid(pdf_file, grobid_url = \"http://localhost:8070\")"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"load-from-xml","dir":"Articles","previous_headings":"Installation","what":"Load from XML","title":"papercheck","text":"function read_grobid() can read XML files parsed grobid.","code":"paper <- read_grobid(xml_file)"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"load-from-non-pdf-document","dir":"Articles","previous_headings":"Installation","what":"Load from non-PDF document","title":"papercheck","text":"take advantage grobid’s ability parse references aspects papers, now best way convert papers PDF. However, papercheck can read plain text character object text/docx file read_text().","code":"text <- \"Abstract  This is my very short paper. It has two sentences.\" shortpaper <- read_text(text, id = \"shortpaper\") shortpaper$full_text #> # A tibble: 3 × 7 #>   text                         section  header     div     p     s id         #>   <chr>                        <chr>    <chr>    <int> <dbl> <int> <chr>      #> 1 Abstract                     abstract Abstract     1     0     1 shortpaper #> 2 This is my very short paper. abstract Abstract     1     1     1 shortpaper #> 3 It has two sentences.        abstract Abstract     1     1     2 shortpaper filename <- system.file(\"extdata/to_err_is_human.docx\",                          package = \"papercheck\") paper_from_doc <- read_text(filename)"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"search-text","dir":"Articles","previous_headings":"","what":"Search Text","title":"papercheck","text":"can access parsed table full text paper via paper$full_text, may find convenient use function search_text(). defaults return data table sentence, section type, header, div, paragraph sentence numbers, file name. (section type best guess headers, may always accurate.)","code":"text <- search_text(paper)"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"pattern","dir":"Articles","previous_headings":"Search Text","what":"Pattern","title":"papercheck","text":"can search specific word phrase setting pattern argument. pattern regex string default; set fixed = TRUE want find exact text matches.","code":"text <- search_text(paper, pattern = \"papercheck\")"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"section","dir":"Articles","previous_headings":"Search Text","what":"Section","title":"papercheck","text":"Set section vector sections search .","code":"text <- search_text(paper, \"papercheck\",                      section = \"abstract\")"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"return","dir":"Articles","previous_headings":"Search Text","what":"Return","title":"papercheck","text":"Set return one “sentence”, “paragraph”, “section”, “match” control gets returned.","code":"text <- search_text(paper, \"papercheck\",                      section = \"intro\",                      return = \"paragraph\")"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"regex-matches","dir":"Articles","previous_headings":"Search Text","what":"Regex matches","title":"papercheck","text":"can also return just matched text regex search setting return = \"match\". extra ... arguments search_text() passed grep(), perl = TRUE allows use complex regex, like .","code":"pattern <- \"[a-zA-Z]\\\\S*\\\\s*(=|<)\\\\s*[0-9\\\\.,-]*\\\\d\" text <- search_text(paper, pattern, return = \"match\", perl = TRUE)"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"expand-text","dir":"Articles","previous_headings":"Search Text","what":"Expand Text","title":"papercheck","text":"can expand text returned search_text() module expand_text().","code":"marginal <- search_text(paper, \"marginal\") |>   expand_text(paper, plus = 1, minus = 1)  marginal[, c(\"text\", \"expanded\")] #> # A tibble: 2 × 2 #>   text                                                                  expanded #>   <chr>                                                                 <chr>    #> 1 \"The paper shows examples of (1) open and closed OSF links; (2) cita… \"All da… #> 2 \"On average researchers in the experimental condition found the app … \"On ave…"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"large-language-models","dir":"Articles","previous_headings":"","what":"Large Language Models","title":"papercheck","text":"can query extracted text papers LLMs using groq.","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"setup","dir":"Articles","previous_headings":"Large Language Models","what":"Setup","title":"papercheck","text":"need get API key https://console.groq.com/keys. avoid type , add .Renviron file following format (can use usethis::edit_r_environ() access .Renviron file).","code":"GROQ_GPT_KEY=\"sk-proj-abcdefghijklmnopqrs0123456789ABCDEFGHIJKLMNOPQRS\" # useful if you aren't sure where this file is usethis::edit_r_environ()"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"llm-queries","dir":"Articles","previous_headings":"Large Language Models","what":"LLM Queries","title":"papercheck","text":"can ask LLM process text. Use search_text() first narrow text want query. , returned first two papers’ introduction sections, returned full section. asked LLM “hypothesis study?”.","code":"hypotheses <- search_text(papers[1:2],                            section = \"intro\",                            return = \"section\") query <- \"What is the hypothesis of this study? Answer as briefly as possible.\" llm_hypo <- llm(hypotheses, query)"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"batch-processing","dir":"Articles","previous_headings":"","what":"Batch Processing","title":"papercheck","text":"functions pdf2grobid() read_grobid() also work folder files, returning list XML file paths paper objects, respectively. functions search_text(), expand_text() llm() also work list paper objects.","code":"grobid_dir <- demodir()  papers <- read_grobid(grobid_dir)  hypotheses <- search_text(papers, \"hypothesi\",                            section = \"intro\",                            return = \"paragraph\")"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"modules","dir":"Articles","previous_headings":"","what":"Modules","title":"papercheck","text":"Papercheck designed modularly, can add modules check anything. comes set pre-defined modules, hope people share modules.","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"module-list","dir":"Articles","previous_headings":"Modules","what":"Module List","title":"papercheck","text":"can see list built-modules function .","code":"module_list() #>  * all-p-values: List all p-values in the text, returning the matched text (e.g., 'p = 0.04') and document location in a table. #>  * all-urls: List all the URLs in the main text #>  * imprecise-p: List any p-values reported with insufficient precision (e.g., p < .05 or p = n.s.) #>  * llm-summarise: Generate a 1-sentence summary for each section #>  * marginal: List all sentences that describe an effect as 'marginally significant'. #>  * osf-check: List all OSF links and whether they are open, closed, or do not exist. #>  * ref-consistency: Check if all references are cited and all citations are referenced #>  * retractionwatch: Flag any cited papers in the RetractionWatch database #>  * statcheck: Check consistency of p-values and test statistics"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"running-modules","dir":"Articles","previous_headings":"Modules","what":"Running modules","title":"papercheck","text":"run built-module paper, can reference name.","code":"p <- module_run(paper, \"all-p-values\")"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"creating-modules","dir":"Articles","previous_headings":"Modules","what":"Creating modules","title":"papercheck","text":"can create modules specifying arguments search_text() llm() JSON format /including R code. Modules can also contain instructions reporting, give “traffic lights” whether check passed failed, include appropriate text feedback report. See modules vignette details. abbreviated example module detects p-values text returns matching text.","code":"{   \"title\": \"List All P-Values\",   \"description\": \"List all p-values in the text, returning the matched text (e.g., 'p = 0.04') and document location in a table.\",   \"text\": {     \"pattern\": \"(?<=[^a-z])p-?(value)?\\\\s*[<>=≤≥]{1,2}\\\\s*(n\\\\.?s\\\\.?|\\\\d?\\\\.\\\\d+e?-?\\\\d*)\",     \"return\": \"match\",     \"perl\": true   } }"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"reports","dir":"Articles","previous_headings":"","what":"Reports","title":"papercheck","text":"can generate report set modules. default set c(\"imprecise-p\", \"marginal\", \"osf-check\", \"retractionwatch\", \"ref-consistency\") See example report.","code":"report(paper, output_format = \"qmd\")"},{"path":"https://scienceverse.github.io/papercheck/articles/report-example.html","id":"imprecise-p-values","dir":"Articles","previous_headings":"","what":"Imprecise P-Values","title":"Example Report","text":"may reported imprecise p-values","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/report-example.html","id":"marginal-significance","dir":"Articles","previous_headings":"","what":"Marginal Significance","title":"Example Report","text":"described effects marginally/borderline/close significant. better write ‘reach threshold alpha significance’.","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/report-example.html","id":"check-status-of-osf-links","dir":"Articles","previous_headings":"","what":"Check Status of OSF Links","title":"Example Report","text":"detected closed OSF links","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/report-example.html","id":"retractionwatch","dir":"Articles","previous_headings":"","what":"RetractionWatch","title":"Example Report","text":"cited papers Retraction Watch database; double-check acknowledging retracted status citing .","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/report-example.html","id":"reference-consistency","dir":"Articles","previous_headings":"","what":"Reference Consistency","title":"Example Report","text":"references cited citations referenced","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/text_model.html","id":"set-up-ground-truth","dir":"Articles","previous_headings":"","what":"Set up ground truth","title":"Text Models","text":"See metascience vignette explanation set ground truth table. , ’re going split data training test set.","code":"ground_truth <- readxl::read_excel(\"power/power_screening_coded.xlsx\")  train <- dplyr::slice_sample(ground_truth, prop = 0.5) test <- anti_join(ground_truth, train, by = \"text\")"},{"path":"https://scienceverse.github.io/papercheck/articles/text_model.html","id":"get-important-words","dir":"Articles","previous_headings":"","what":"Get important words","title":"Text Models","text":"can use method finding words want use model, papercheck built-function find words distinctive classification groups. classification values 0 1, can TRUE/FALSE two text values. n_X total number incidents word category X, freq_X average number incidents per text string category X (can higher 1 word tends found several times per sentence). table gives top n words largest absolute difference frequency. default, function “stem” words using “porter” algorithm. example, “sampl” match “sample”, “samples” “sampling”. text English, check SnowballC::getStemLanguages() supported languages, set stem_language = FALSE. can get rid words think irrelevant (even predictive classification data set) adding stop_words. tidytext::stop_words object gives list common stop words, includes words like “”, “according”, “small”, use caution. “###” value represents number (default setting numbers argument). can set numbers argument “specific” see specific numbers associated power analyses.","code":"words <- distinctive_words(   text = train$text,   classification = train$power_computation,   n = 10 ) words <- distinctive_words(   text = train$text,   classification = train$power_computation,   n = 10,   numbers = \"specific\",   stop_words = c(\"the\", \"a\", \"of\", \"an\", \"and\") )"},{"path":"https://scienceverse.github.io/papercheck/articles/text_model.html","id":"code-text-features","dir":"Articles","previous_headings":"","what":"Code text features","title":"Text Models","text":"Next, code features ground truth text using text_features(). give data frame codes 0 1 absence presence word feature. word_count defaults TRUE, returns number words text string. has_number defaults TRUE, checks number text. “###” words list, automatically set TRUE. has_symbols named vector non-word strings (use regex) want detect. values defaults “presence” returns 0 1 presence word text string, “count” returns number incidences word per string.","code":"has_symbols <- c(has_equals = \"=\",                   has_percent = \"%\")  features <- text_features(   text = train$text,    words = words,   word_count = FALSE,    has_number = TRUE,   has_symbol = has_symbols,    values = \"presence\" # presence or count )  # show the first row features[1, ] |> str() #> 'data.frame':    1 obs. of  13 variables: #>  $ has_number : num 1 #>  $ has_equals : num 1 #>  $ has_percent: num 1 #>  $ size       : int 1 #>  $ effect     : int 1 #>  $ sampl      : int 1 #>  $ particip   : int 1 #>  $ detect     : int 0 #>  $ 80         : int 1 #>  $ to         : int 0 #>  $ œ          : int 0 #>  $ power      : int 1 #>  $ d          : int 1"},{"path":"https://scienceverse.github.io/papercheck/articles/text_model.html","id":"train-a-model","dir":"Articles","previous_headings":"","what":"Train a model","title":"Text Models","text":"can use feature data train model. , ’re using simple binomial logistic regression predict classification features. can use model like method assess choose best model.","code":"# Train logistic regression model model <- glm(train$power_computation ~ .,              data = features,              family = \"binomial\")  summary(model) #>  #> Call: #> glm(formula = train$power_computation ~ ., family = \"binomial\",  #>     data = features) #>  #> Coefficients: #>             Estimate Std. Error z value Pr(>|z|)     #> (Intercept) -21.3181   989.8813  -0.022  0.98282     #> has_number    3.0625     1.1007   2.782  0.00540 **  #> has_equals   -0.3700     0.5057  -0.732  0.46435     #> has_percent   0.7830     0.5300   1.477  0.13958     #> size          1.3117     0.5081   2.582  0.00983 **  #> effect        0.3241     0.4802   0.675  0.49974     #> sampl         1.3752     0.4902   2.806  0.00502 **  #> particip      2.4535     0.5343   4.592 4.39e-06 *** #> detect        1.8721     0.5788   3.234  0.00122 **  #> `80`          0.7544     0.5505   1.371  0.17051     #> to           -0.3057     0.4383  -0.697  0.48560     #> œ             3.0397     0.7637   3.980 6.88e-05 *** #> power        14.9684   989.8807   0.015  0.98794     #> d             1.1816     0.6906   1.711  0.08710 .   #> --- #> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 #>  #> (Dispersion parameter for binomial family taken to be 1) #>  #>     Null deviance: 428.05  on 324  degrees of freedom #> Residual deviance: 170.96  on 311  degrees of freedom #> AIC: 198.96 #>  #> Number of Fisher Scoring iterations: 16"},{"path":"https://scienceverse.github.io/papercheck/articles/text_model.html","id":"predict-classification","dir":"Articles","previous_headings":"","what":"Predict classification","title":"Text Models","text":"Now can classify text using model. First, ’re going predict classification original training data. Use text_features() get feature data predict() return model response, compare result threshold (0.5) generate predicted classification. Now test new set data.","code":"train$model_response <- predict(model, features)  train$power_computation_predict <-   train$model_response > 0.5  dplyr::count(train,               power_computation,               power_computation_predict) #> # A tibble: 4 × 3 #>   power_computation power_computation_predict     n #>               <dbl> <lgl>                     <int> #> 1                 0 FALSE                       195 #> 2                 0 TRUE                         10 #> 3                 1 FALSE                        30 #> 4                 1 TRUE                         90 test_features <- text_features(   text = test$text,    words = words,   word_count = FALSE,    has_number = TRUE,   has_symbol = has_symbols,    values = \"presence\" # presence or count ) test$model_response <- predict(model, test_features)  test$power_computation_predict <-   test$model_response > 0.5  dplyr::count(test,               power_computation,               power_computation_predict) #> # A tibble: 4 × 3 #>   power_computation power_computation_predict     n #>               <dbl> <lgl>                     <int> #> 1                 0 FALSE                       207 #> 2                 0 TRUE                         15 #> 3                 1 FALSE                        35 #> 4                 1 TRUE                         69"},{"path":"https://scienceverse.github.io/papercheck/articles/validate.html","id":"validation-sample","dir":"Articles","previous_headings":"","what":"Validation sample","title":"Validation","text":"Set papers validation sample. need directory XML files created pdf2grobid(). example, ’ll set everything temporary directory.","code":"# create validation directory in temp dir valdir <- tempdir() |> file.path(\"validate\") dir.create(valdir, showWarnings = FALSE)  # copy built-in XML files to xml directory xmldir <- file.path(valdir, \"xml\") dir.create(xmldir, showWarnings = FALSE) xmls <- list.files(demodir(), \"\\\\.xml$\", full.names = TRUE) file.copy(xmls, xmldir) #> [1] TRUE TRUE TRUE"},{"path":"https://scienceverse.github.io/papercheck/articles/validate.html","id":"sample-data","dir":"Articles","previous_headings":"","what":"Sample data","title":"Validation","text":"Create data frame info paper. One column must called “id” contain paths xml files (relative validation file location). possible columns “table”, “report”, “traffic_light”, contain expected values items module ’re testing. want check just first row text column return table, omit table column use method next section. code one inaccurate traffic light (“red”) demonstration purposes.","code":"sample <- data.frame(   id =  file.path(\"xml\", list.files(xmldir)),   table = c(\"faceresearch.org\", \"https://osf.io/mwzuq\", \"https://osf.io/pwtrh\"),   report = rep(\"\", 3), # this module has no report   traffic_light = c(\"info\", \"info\", \"red\") )"},{"path":"https://scienceverse.github.io/papercheck/articles/validate.html","id":"expected-table","dir":"Articles","previous_headings":"","what":"Expected Table","title":"Validation","text":"tables returned module ’re validating can one row, want check columns “text”, need add expected values separate data frame. One column must “xml” join table. columns names columns returned module. can omit columns checked validation. , validate text header columns (making one mistake header column demonstration purposes).","code":"expected <- data.frame(   id = rep(sample$id, c(2, 3, 2)),   text = c(\"faceresearch.org\", \"stumbleupon.com\",            rep(\"https://osf.io/mwzuq\", 3),            rep(\"https://osf.io/pwtrh\", 2)),   header = c(\"Participants\", \"Participants\",               \"Methods\", \"Procedure\", \"Analysis\",              \"Intro\", \"Attitude\") )  expected #>                 id                 text       header #> 1 xml/eyecolor.xml     faceresearch.org Participants #> 2 xml/eyecolor.xml      stumbleupon.com Participants #> 3   xml/incest.xml https://osf.io/mwzuq      Methods #> 4   xml/incest.xml https://osf.io/mwzuq    Procedure #> 5   xml/incest.xml https://osf.io/mwzuq     Analysis #> 6   xml/prereg.xml https://osf.io/pwtrh        Intro #> 7   xml/prereg.xml https://osf.io/pwtrh     Attitude"},{"path":"https://scienceverse.github.io/papercheck/articles/validate.html","id":"run-validation","dir":"Articles","previous_headings":"","what":"Run Validation","title":"Validation","text":"don’t include expected results table, table check just check first result text column module results match table column sample. include expected results table, assess data matching module results table. can explore problems looking sample returned tables. table check false, one missing one extra result. can view validated results table paper… …compare expected results.","code":"v <- validate(\"all-urls\", sample, path = valdir)  v v <- validate(\"all-urls\", sample, expected, path = valdir)  v # show rows where the traffic light check is false v$sample |>   dplyr::filter(!tl_check) #>           id                table report traffic_light report_ver tl_ver misses #> 1 xml/prereg https://osf.io/pwtrh                  red              info      1 #>   false_alarms table_check report_check tl_check #> 1            3       FALSE         TRUE    FALSE # show rows where the table check is false v$sample |>   dplyr::filter(!table_check) #>             id                table report traffic_light report_ver tl_ver #> 1 xml/eyecolor     faceresearch.org                 info              info #> 2   xml/prereg https://osf.io/pwtrh                  red              info #>   misses false_alarms table_check report_check tl_check #> 1      0            1       FALSE         TRUE     TRUE #> 2      1            3       FALSE         TRUE    FALSE v$table |>   dplyr::filter(id == \"xml/prereg.xml\") #> [1] id     text   header #> <0 rows> (or 0-length row.names) expected |>   dplyr::filter(id == \"xml/prereg.xml\") #>               id                 text   header #> 1 xml/prereg.xml https://osf.io/pwtrh    Intro #> 2 xml/prereg.xml https://osf.io/pwtrh Attitude"},{"path":"https://scienceverse.github.io/papercheck/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lisa DeBruine. Author, maintainer. Daniel Lakens. Author. Cristian Mesquida. Contributor.","code":""},{"path":"https://scienceverse.github.io/papercheck/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"DeBruine L, Lakens D (2025). papercheck: Check Scientific Papers Best Practices. R package version 0.0.0.9029, https://scienceverse.github.io/papercheck/, https://github.com/scienceverse/papercheck.","code":"@Manual{,   title = {papercheck: Check Scientific Papers for Best Practices},   author = {Lisa DeBruine and Daniel Lakens},   year = {2025},   note = {R package version 0.0.0.9029, https://scienceverse.github.io/papercheck/},   url = {https://github.com/scienceverse/papercheck}, }"},{"path":"https://scienceverse.github.io/papercheck/index.html","id":"papercheck-","dir":"","previous_headings":"","what":"Check Scientific Papers for Best Practices","title":"Check Scientific Papers for Best Practices","text":"goal papercheck automatically check scientific papers best practices.","code":""},{"path":"https://scienceverse.github.io/papercheck/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Check Scientific Papers for Best Practices","text":"can install development version papercheck GitHub : can launch interactive shiny app version code :","code":"# install.packages(\"devtools\") devtools::install_github(\"scienceverse/papercheck\") papercheck_app()"},{"path":"https://scienceverse.github.io/papercheck/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Check Scientific Papers for Best Practices","text":"Convert PDF grobid XML format, read paper object.","code":"library(papercheck) pdf <- demopdf() # use the path of your own PDF grobid <- pdf2grobid(pdf) paper <- read_grobid(grobid)"},{"path":"https://scienceverse.github.io/papercheck/index.html","id":"search-text","dir":"","previous_headings":"Example","what":"Search Text","title":"Check Scientific Papers for Best Practices","text":"Search returned text. regex pattern searches text looks like statistical values (e.g., N=313 p = 0.17).","code":"pattern <- \"[a-zA-Z]\\\\S*\\\\s*(=|<)\\\\s*[0-9\\\\.-]*\\\\d\" text <- search_text(paper, pattern,                      return = \"match\",                      perl = TRUE)"},{"path":"https://scienceverse.github.io/papercheck/index.html","id":"batch-processing","dir":"","previous_headings":"","what":"Batch Processing","title":"Check Scientific Papers for Best Practices","text":"functions pdf2grobid() read_grobid() also work folder files, returning list XML file paths paper objects, respectively. functions search_text(), expand_text() llm() also work list paper objects.","code":"# read in all the XML files in the demo directory grobid_dir <- demodir() papers <- read_grobid(grobid_dir)  # select sentences in the intros containing the text \"previous\" previous <- search_text(papers, \"previous\",                          section = \"intro\",                          return = \"sentence\")"},{"path":"https://scienceverse.github.io/papercheck/index.html","id":"large-language-models","dir":"","previous_headings":"Batch Processing","what":"Large Language Models","title":"Check Scientific Papers for Best Practices","text":"can query extracted text papers LLMs using groq. Use search_text() first narrow text want query. , limited search first two papers’ introduction sections, returned full section. asked LLM “hypothesis study?”.","code":"hypotheses <- search_text(papers[1:2],                            section = \"intro\",                            return = \"section\") query <- \"What is the hypothesis of this study? Answer as briefly as possible.\" llm_hypo <- llm(hypotheses, query)"},{"path":"https://scienceverse.github.io/papercheck/index.html","id":"modules","dir":"","previous_headings":"Batch Processing","what":"Modules","title":"Check Scientific Papers for Best Practices","text":"Papercheck designed modularly, can add modules check anything. comes set pre-defined modules, hope people share modules. can see list built-modules function . -p-values: List p-values text, returning matched text (e.g., ‘p = 0.04’) document location table. -urls: List URLs main text imprecise-p: List p-values reported insufficient precision (e.g., p < .05 p = n.s.) llm-summarise: Generate 1-sentence summary section marginal: List sentences describe effect ‘marginally significant’. osf-check: List OSF links whether open, closed, exist. ref-consistency: Check references cited citations referenced retractionwatch: Flag cited papers RetractionWatch database sample-size-ml: [DEMO] Classify sentence whether contains sample-size information, returning sentences probable sample-size info. statcheck: Check consistency p-values test statistics run built-module paper, can reference name.","code":"module_list() p <- module_run(paper, \"all-p-values\")"},{"path":"https://scienceverse.github.io/papercheck/index.html","id":"reports","dir":"","previous_headings":"Batch Processing","what":"Reports","title":"Check Scientific Papers for Best Practices","text":"can generate report set modules. default set c(\"imprecise-p\", \"marginal\", \"osf-check\", \"retractionwatch\", \"ref-consistency\")","code":"paper_path <- report(paper, output_format = \"html\")"},{"path":"https://scienceverse.github.io/papercheck/reference/add_author.html","id":null,"dir":"Reference","previous_headings":"","what":"Add an author — add_author","title":"Add an author — add_author","text":"Add author","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/add_author.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add an author — add_author","text":"","code":"add_author(study, surname, given = \"\", orcid = NULL, roles = c(), ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/add_author.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add an author — add_author","text":"study study list object class scivrs_study surname character string author's last name(s) given character string author's given name(s) orcid author's unique ORCiD (see https://orcid.org/) roles vector roles CRediT taxonomy (see https://casrai.org/credit/); use credit_roles() view full list ... info add author object","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/add_author.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add an author — add_author","text":"study object class scivrs_study","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/author.html","id":null,"dir":"Reference","previous_headings":"","what":"Author in CRediT Format — author","title":"Author in CRediT Format — author","text":"Author CRediT Format","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/author.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Author in CRediT Format — author","text":"","code":"author(surname, given = \"\", orcid = NULL, roles = c(), ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/author.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Author in CRediT Format — author","text":"surname character string author's last name(s) given character string author's given name(s) orcid author's unique ORCiD (see https://orcid.org/) roles vector roles CRediT taxonomy (see https://casrai.org/credit/); use credit_roles() view full list ... info add author object","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/author.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Author in CRediT Format — author","text":"list class scivrs_author","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/author_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Get author information in a table — author_table","title":"Get author information in a table — author_table","text":"Get author information table","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/author_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get author information in a table — author_table","text":"","code":"author_table(paper)"},{"path":"https://scienceverse.github.io/papercheck/reference/author_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get author information in a table — author_table","text":"paper paper object list paper objects","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/author_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get author information in a table — author_table","text":"data frame author information","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/author_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get author information in a table — author_table","text":"","code":"paper <- psychsci[1:2] author_table(paper) #> # A tibble: 10 × 6 #>    name.surname name.given email                         affiliation id        n #>    <chr>        <chr>      <chr>                         <chr>       <chr> <int> #>  1 Michael      John       \"johnmichaelaarhus@gmail.com\" Center for… 0956…     1 #>  2 Sandberg     Kristian   \"\"                            Cognitive … 0956…     2 #>  3 Skewes       Joshua     \"\"                            Interactin… 0956…     3 #>  4 Wolf         Thomas     \"\"                            Program in… 0956…     4 #>  5 Blicher      Jakob      \"\"                            Cognitive … 0956…     5 #>  6 Overgaard    Morten     \"\"                            Cognitive … 0956…     6 #>  7 Frith        Chris D    \"\"                            Wellcome T… 0956…     7 #>  8 Malcolm      George L   \"glmalcolm@gwu.edu\"           The George… 0956…     1 #>  9 Nuthmann     Antje      \"\"                            University… 0956…     2 #> 10 Schyns       Philippe G \"\"                            University… 0956…     3"},{"path":"https://scienceverse.github.io/papercheck/reference/check_orcid.html","id":null,"dir":"Reference","previous_headings":"","what":"Check validity of ORCiD — check_orcid","title":"Check validity of ORCiD — check_orcid","text":"Check validity ORCiD","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/check_orcid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check validity of ORCiD — check_orcid","text":"","code":"check_orcid(orcid)"},{"path":"https://scienceverse.github.io/papercheck/reference/check_orcid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check validity of ORCiD — check_orcid","text":"orcid 16-character ORCiD bare URL format","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/check_orcid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check validity of ORCiD — check_orcid","text":"formatted 16-character ORCiD FALSE","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/check_orcid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check validity of ORCiD — check_orcid","text":"","code":"check_orcid(\"0000-0002-7523-5539\") #> [1] \"0000-0002-7523-5539\" check_orcid(\"0000-0002-0247-239X\") #> [1] \"0000-0002-0247-239X\" check_orcid(\"https://orcid.org/0000-0002-0247-239X\") #> [1] \"0000-0002-0247-239X\" check_orcid(\"0000-0002-0247-2394\") # incorrect, return FALSE #> Warning: The ORCiD 0000-0002-0247-2394 is not valid. #> [1] FALSE"},{"path":"https://scienceverse.github.io/papercheck/reference/concat_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate tables — concat_tables","title":"Concatenate tables — concat_tables","text":"Concatenate tables across list paper objects","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/concat_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate tables — concat_tables","text":"","code":"concat_tables(papers, name_path)"},{"path":"https://scienceverse.github.io/papercheck/reference/concat_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate tables — concat_tables","text":"papers list paper objects name_path vector names get table","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/concat_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate tables — concat_tables","text":"merged table","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/concat_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate tables — concat_tables","text":"","code":"grobid_dir <- system.file(\"grobid\", package = \"papercheck\") papers <- read_grobid(grobid_dir) references <- concat_tables(papers, c(\"refs\", \"references\"))"},{"path":"https://scienceverse.github.io/papercheck/reference/credit_roles.html","id":null,"dir":"Reference","previous_headings":"","what":"CRediT Roles — credit_roles","title":"CRediT Roles — credit_roles","text":"CRediT Roles","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/credit_roles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CRediT Roles — credit_roles","text":"","code":"credit_roles(display = c(\"explain\", \"names\", \"abbr\"))"},{"path":"https://scienceverse.github.io/papercheck/reference/credit_roles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CRediT Roles — credit_roles","text":"display Whether display category names, explanations, abbreviations","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/credit_roles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CRediT Roles — credit_roles","text":"list roles","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/credit_roles.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CRediT Roles — credit_roles","text":"","code":"credit_roles() #> [1/con] Conceptualization: Ideas; formulation or evolution of overarching research goals and aims. #> [2/dat] Data curation: Management activities to annotate (produce metadata), scrub data and maintain research data (including software code, where it is necessary for interpreting the data itself) for initial use and later re-use. #> [3/ana] Formal analysis: Application of statistical, mathematical, computational, or other formal techniques to analyse or synthesize study data. #> [4/fun] Funding acquisition: Acquisition of the financial support for the project leading to this publication. #> [5/inv] Investigation: Conducting a research and investigation process, specifically performing the experiments, or data/evidence collection. #> [6/met] Methodology: Development or design of methodology; creation of models. #> [7/adm] Project administration: Management and coordination responsibility for the research activity planning and execution. #> [8/res] Resources: Provision of study materials, reagents, materials, patients, laboratory samples, animals, instrumentation, computing resources, or other analysis tools. #> [9/sof] Software: Programming, software development; designing computer programs; implementation of the computer code and supporting algorithms; testing of existing code components. #> [10/sup] Supervision: Oversight and leadership responsibility for the research activity planning and execution, including mentorship external to the core team. #> [11/val] Validation: Verification, whether as a part of the activity or separate, of the overall replication/reproducibility of results/experiments and other research outputs. #> [12/vis] Visualization: Preparation, creation and/or presentation of the published work, specifically visualization/data presentation. #> [13/dra] Writing - original draft: Preparation, creation and/or presentation of the published work, specifically writing the initial draft (including substantive translation). #> [14/edi] Writing - review & editing: Preparation, creation and/or presentation of the published work by those from the original research group, specifically critical review, commentary or revision -- including pre- or post-publication stages."},{"path":"https://scienceverse.github.io/papercheck/reference/crossref.html","id":null,"dir":"Reference","previous_headings":"","what":"Crossref info — crossref","title":"Crossref info — crossref","text":"Crossref info","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/crossref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crossref info — crossref","text":"","code":"crossref(doi)"},{"path":"https://scienceverse.github.io/papercheck/reference/crossref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crossref info — crossref","text":"doi DOI paper get info ","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/crossref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crossref info — crossref","text":"crossref data","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/crossref.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crossref info — crossref","text":"","code":"doi <- \"10.7717/peerj.4375\" if (FALSE) { # \\dontrun{   cr_info <- crossref(doi) } # }"},{"path":"https://scienceverse.github.io/papercheck/reference/demodir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get demo directory of grobid XML files — demodir","title":"Get demo directory of grobid XML files — demodir","text":"Get demo directory grobid XML files","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/demodir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get demo directory of grobid XML files — demodir","text":"","code":"demodir()"},{"path":"https://scienceverse.github.io/papercheck/reference/demodir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get demo directory of grobid XML files — demodir","text":"paths","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/demodir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get demo directory of grobid XML files — demodir","text":"","code":"demodir() #> [1] \"/home/runner/work/_temp/Library/papercheck/grobid\""},{"path":"https://scienceverse.github.io/papercheck/reference/demopdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Get demo PDF file — demopdf","title":"Get demo PDF file — demopdf","text":"Get demo PDF file","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/demopdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get demo PDF file — demopdf","text":"","code":"demopdf()"},{"path":"https://scienceverse.github.io/papercheck/reference/demopdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get demo PDF file — demopdf","text":"vector paths","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/demopdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get demo PDF file — demopdf","text":"","code":"demopdf() #> [1] \"/home/runner/work/_temp/Library/papercheck/extdata/to_err_is_human.pdf\""},{"path":"https://scienceverse.github.io/papercheck/reference/demoxml.html","id":null,"dir":"Reference","previous_headings":"","what":"Get demo XML file — demoxml","title":"Get demo XML file — demoxml","text":"Get demo XML file","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/demoxml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get demo XML file — demoxml","text":"","code":"demoxml()"},{"path":"https://scienceverse.github.io/papercheck/reference/demoxml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get demo XML file — demoxml","text":"vector paths","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/demoxml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get demo XML file — demoxml","text":"","code":"demoxml() #> [1] \"/home/runner/work/_temp/Library/papercheck/extdata/to_err_is_human.xml\""},{"path":"https://scienceverse.github.io/papercheck/reference/distinctive_words.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Distinctive Words — distinctive_words","title":"Get Distinctive Words — distinctive_words","text":"Get Distinctive Words","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/distinctive_words.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Distinctive Words — distinctive_words","text":"","code":"distinctive_words(   text,   classification,   n = Inf,   stop_words = c(),   numbers = c(\"any\", \"specific\", \"remove\"),   stem_language = \"porter\",   min_total = length(text)/10 )"},{"path":"https://scienceverse.github.io/papercheck/reference/distinctive_words.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Distinctive Words — distinctive_words","text":"text vector text assess classification vector classification n number top distinctive words get stop_words vector data frame words exclude numbers numeric values: \"\", \"specific\", \"remove\" stem_language language use stemming words, SnowballC::getStemLanguages(), set FALSE stemming min_total minimum total number incidences incude word, defaults 10% number text strings","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/distinctive_words.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Distinctive Words — distinctive_words","text":"data frame words","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/expand_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand text — expand_text","title":"Expand text — expand_text","text":"table resulting search_text() module return object, can expand text column full sentence, paragraph, section. can also set plus minus append prepend sentences result (expand_to \"sentence\").","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/expand_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand text — expand_text","text":"","code":"expand_text(   results_table,   paper,   expand_to = c(\"sentence\", \"paragraph\", \"div\", \"section\"),   plus = 0,   minus = 0 )"},{"path":"https://scienceverse.github.io/papercheck/reference/expand_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand text — expand_text","text":"results_table table expand paper papercheck paper object list paper objects look expanded text expand_to whether expand sentence, paragraph, div, section level plus append additional sentences target expansion minus prepend additional sentences target expansion","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/expand_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Expand text — expand_text","text":"results table expanded text","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/expand_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Expand text — expand_text","text":"","code":"# single paper search paper <- demoxml() |> read_grobid() res_tbl <- search_text(paper, \"p =\", return = \"match\") expanded <- expand_text(res_tbl, paper)  # multiple paper search papers <- demodir() |> read_grobid() res_tbl <- search_text(papers, \"replicate\", return = \"sentence\") expanded <- expand_text(res_tbl, papers, plus = 1, minus = 1)"},{"path":"https://scienceverse.github.io/papercheck/reference/get_authors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get author info from XML — get_authors","title":"Get author info from XML — get_authors","text":"Get author info XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_authors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get author info from XML — get_authors","text":"","code":"get_authors(xml)"},{"path":"https://scienceverse.github.io/papercheck/reference/get_authors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get author info from XML — get_authors","text":"xml grobid XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_authors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get author info from XML — get_authors","text":"author list","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_doi.html","id":null,"dir":"Reference","previous_headings":"","what":"Get DOI info from XML — get_doi","title":"Get DOI info from XML — get_doi","text":"Get DOI info XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_doi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get DOI info from XML — get_doi","text":"","code":"get_doi(xml)"},{"path":"https://scienceverse.github.io/papercheck/reference/get_doi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get DOI info from XML — get_doi","text":"xml grobid XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_doi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get DOI info from XML — get_doi","text":"DOI","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_full_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Add section info to full text table — get_full_text","title":"Add section info to full text table — get_full_text","text":"Add section info full text table","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_full_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add section info to full text table — get_full_text","text":"","code":"get_full_text(xml, id = NULL)"},{"path":"https://scienceverse.github.io/papercheck/reference/get_full_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add section info to full text table — get_full_text","text":"xml grobid XML id ID paper","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_full_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add section info to full text table — get_full_text","text":"data frame classified full text","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_idx.html","id":null,"dir":"Reference","previous_headings":"","what":"Get index from id — get_idx","title":"Get index from id — get_idx","text":"Get index id item hypotheses, analyses, data sections study object","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_idx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get index from id — get_idx","text":"","code":"get_idx(study, id = NULL, section = \"hypotheses\")"},{"path":"https://scienceverse.github.io/papercheck/reference/get_idx.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get index from id — get_idx","text":"study study list object class scivrs_study id id section (index character) NULL, assigns last item list section section search, c(\"hypotheses\", \"analyses\", \"data\")","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_idx.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get index from id — get_idx","text":"numeric index","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_orcid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ORCiD from Name — get_orcid","title":"Get ORCiD from Name — get_orcid","text":"Get ORCiD Name","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_orcid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ORCiD from Name — get_orcid","text":"","code":"get_orcid(family, given = \"*\")"},{"path":"https://scienceverse.github.io/papercheck/reference/get_orcid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ORCiD from Name — get_orcid","text":"family family (last) name search given optional given (first) name search . Initials converted , e.g., L M L\\* M\\*","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_orcid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ORCiD from Name — get_orcid","text":"vector matching ORCiDs","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_orcid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get ORCiD from Name — get_orcid","text":"","code":"if (FALSE) { # \\dontrun{   get_orcid(\"DeBruine\", \"Lisa\") } # }"},{"path":"https://scienceverse.github.io/papercheck/reference/get_refs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get references from grobid XML — get_refs","title":"Get references from grobid XML — get_refs","text":"Get references grobid XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_refs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get references from grobid XML — get_refs","text":"","code":"get_refs(xml)"},{"path":"https://scienceverse.github.io/papercheck/reference/get_refs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get references from grobid XML — get_refs","text":"xml grobid XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_refs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get references from grobid XML — get_refs","text":"list data frame referencesand data frame citation sentences","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_submission.html","id":null,"dir":"Reference","previous_headings":"","what":"Get submission info from XML — get_submission","title":"Get submission info from XML — get_submission","text":"Get submission info XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_submission.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get submission info from XML — get_submission","text":"","code":"get_submission(xml)"},{"path":"https://scienceverse.github.io/papercheck/reference/get_submission.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get submission info from XML — get_submission","text":"xml grobid XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_submission.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get submission info from XML — get_submission","text":"submission","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/info_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paper information in a table — info_table","title":"Get paper information in a table — info_table","text":"Get paper information table","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/info_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paper information in a table — info_table","text":"","code":"info_table(   paper,   info = c(\"filename\", \"title\", \"keywords\", \"doi\"),   path = c(\"relative\", \"absolute\") )"},{"path":"https://scienceverse.github.io/papercheck/reference/info_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paper information in a table — info_table","text":"paper paper object list paper objects info vector columns return path whether return absolute relative path filename","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/info_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paper information in a table — info_table","text":"data frame paper id info columns","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/info_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paper information in a table — info_table","text":"","code":"paper <- demodir() |> read_grobid() info_table(paper) #> # A tibble: 3 × 5 #>   id       filename                                         title keywords doi   #>   <chr>    <chr>                                            <chr> <chr>    <chr> #> 1 eyecolor /home/runner/work/_temp/Library/papercheck/grob… Posi… NA       10.1… #> 2 incest   /home/runner/work/_temp/Library/papercheck/grob… Havi… NA       NA    #> 3 prereg   /home/runner/work/_temp/Library/papercheck/grob… Will… Pre-reg… NA"},{"path":"https://scienceverse.github.io/papercheck/reference/llm.html","id":null,"dir":"Reference","previous_headings":"","what":"Query an LLM — llm","title":"Query an LLM — llm","text":"Ask large language model (LLM) question want vector text text search_text().","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/llm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query an LLM — llm","text":"","code":"llm(   text,   query,   text_col = \"text\",   model = \"llama3-70b-8192\",   maxTokens = 1024,   temperature = 0.5,   top_p = 0.95,   seed = sample(1e+06:9999999, 1),   API_KEY = Sys.getenv(\"GROQ_API_KEY\") )"},{"path":"https://scienceverse.github.io/papercheck/reference/llm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query an LLM — llm","text":"text text send LLM (vector strings, data frame text column) query query ask LLM text_col name text column text data frame model LLM model name (see llm_models()) maxTokens maximum integer completion tokens returned per query temperature Controls randomness responses. Lower values make responses deterministic. Recommended range: 0.5-0.7 prevent repetitions incoherent outputs; valued 0 inclusive 2 exclusive top_p Nucleus sampling threshold (0 1); usually alter temperature, seed Set reproducible responses API_KEY API key LLM","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/llm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query an LLM — llm","text":"list results","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/llm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Query an LLM — llm","text":"need get API key https://console.groq.com/keys. avoid type , add .Renviron file following format (can use usethis::edit_r_environ() access .Renviron file) GROQ_API_KEY=\"key_value_asdf\" See https://console.groq.com/docs information","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/llm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query an LLM — llm","text":"","code":"# \\donttest{   text <- c(\"hello\", \"number\", \"ten\", 12)   query <- \"Is this a number? Answer only 'TRUE' or 'FALSE'\"   is_number <- llm(text, query) #> Error in llm(text, query): You need to include the argument API_KEY or set the variable GROQ_API_KEY in your Renviron   is_number #> Error: object 'is_number' not found # }"},{"path":"https://scienceverse.github.io/papercheck/reference/llm_models.html","id":null,"dir":"Reference","previous_headings":"","what":"List Available LLM Models — llm_models","title":"List Available LLM Models — llm_models","text":"Returns list available models groq, excluding whisper models (audio) sorting creation date. See https://console.groq.com/docs/models information.","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/llm_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List Available LLM Models — llm_models","text":"","code":"llm_models(API_KEY = Sys.getenv(\"GROQ_API_KEY\"))"},{"path":"https://scienceverse.github.io/papercheck/reference/llm_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List Available LLM Models — llm_models","text":"API_KEY groq API key https://console.groq.com/keys","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/llm_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List Available LLM Models — llm_models","text":"data frame models info","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/llm_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List Available LLM Models — llm_models","text":"","code":"# \\donttest{   llm_models() #> Error in do.call(dplyr::bind_rows, httr::content(response)$data): second argument must be a list # }"},{"path":"https://scienceverse.github.io/papercheck/reference/message.html","id":null,"dir":"Reference","previous_headings":"","what":"Less scary green messages — message","title":"Less scary green messages — message","text":"Less scary green messages","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Less scary green messages — message","text":"","code":"message(..., domain = NULL, appendLF = TRUE)"},{"path":"https://scienceverse.github.io/papercheck/reference/message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Less scary green messages — message","text":"... message components (see message) domain (see message) appendLF append new line? (see message)","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Less scary green messages — message","text":"TRUE","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/ml.html","id":null,"dir":"Reference","previous_headings":"","what":"Machine Learning Classifier — ml","title":"Machine Learning Classifier — ml","text":"Machine Learning Classifier","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Machine Learning Classifier — ml","text":"","code":"ml(   text,   model_dir,   class_col = \"classification\",   map = NULL,   text_col = \"text\",   return_prob = FALSE )"},{"path":"https://scienceverse.github.io/papercheck/reference/ml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Machine Learning Classifier — ml","text":"text text classify model_dir directory model class_col name classification column map vector keys values (e.g., c(\"0\" = \"\", \"1\" = yes\")) text_col name text column text data frame return_prob whether return probability along classification","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/ml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Machine Learning Classifier — ml","text":"data frame text classifications","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_find.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a module by name or path — module_find","title":"Find a module by name or path — module_find","text":"Find module name path","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_find.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a module by name or path — module_find","text":"","code":"module_find(module)"},{"path":"https://scienceverse.github.io/papercheck/reference/module_find.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a module by name or path — module_find","text":"module name module path module","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_find.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a module by name or path — module_find","text":"path module","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List modules — module_list","title":"List modules — module_list","text":"List modules","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List modules — module_list","text":"","code":"module_list(module_dir = system.file(\"modules\", package = \"papercheck\"))"},{"path":"https://scienceverse.github.io/papercheck/reference/module_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List modules — module_list","text":"module_dir directory search modules (defaults built-modules)","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List modules — module_list","text":"data frame modules","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List modules — module_list","text":"","code":"module_list() #>  * all-p-values: List all p-values in the text, returning the matched text (e.g., 'p = 0.04') and document location in a table. #>  * all-urls: List all the URLs in the main text #>  * imprecise-p: List any p-values reported with insufficient precision (e.g., p < .05 or p = n.s.) #>  * llm-summarise: Generate a 1-sentence summary for each section #>  * marginal: List all sentences that describe an effect as 'marginally significant'. #>  * osf-check: List all OSF links and whether they are open, closed, or do not exist. #>  * ref-consistency: Check if all references are cited and all citations are referenced #>  * retractionwatch: Flag any cited papers in the RetractionWatch database #>  * statcheck: Check consistency of p-values and test statistics"},{"path":"https://scienceverse.github.io/papercheck/reference/module_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Report from module output — module_report","title":"Report from module output — module_report","text":"Report module output","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report from module output — module_report","text":"","code":"module_report(module_output, header = 2)"},{"path":"https://scienceverse.github.io/papercheck/reference/module_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report from module output — module_report","text":"module_output output module_run() header header level (default 2)","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report from module output — module_report","text":"text","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report from module output — module_report","text":"","code":"filename <- demoxml() paper <- read_grobid(filename) op <- module_run(paper, \"imprecise-p\") module_report(op) |> cat() #> ## Imprecise P-Values {.red} #>  #> You may have reported some imprecise p-values #>  #> |text    |section |header  | div|  p|  s| #> |:-------|:-------|:-------|---:|--:|--:| #> |p > .05 |results |Results |   3|  2|  2|"},{"path":"https://scienceverse.github.io/papercheck/reference/module_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a module — module_run","title":"Run a module — module_run","text":"Run module","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a module — module_run","text":"","code":"module_run(paper, module, ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/module_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a module — module_run","text":"paper paper object list paper objects module name module path module run object ... arguments module (e.g., arguments llm() function like seed)","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a module — module_run","text":"list returned table report text","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a module — module_run","text":"","code":"filename <- demoxml() paper <- read_grobid(filename) module_run(paper, \"imprecise-p\") #> ### Imprecise P-Values {.red} #>  #> You may have reported some imprecise p-values #>  #> |text    |section |header  | div|  p|  s| #> |:-------|:-------|:-------|---:|--:|--:| #> |p > .05 |results |Results |   3|  2|  2|"},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Run code module — module_run_code","title":"Run code module — module_run_code","text":"Run code module","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run code module — module_run_code","text":"","code":"module_run_code(paper, args, module_dir = \".\")"},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run code module — module_run_code","text":"paper paper object (list objects) args list arguments module_dir base directory module, case code files relative paths","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run code module — module_run_code","text":"data frame","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_llm.html","id":null,"dir":"Reference","previous_headings":"","what":"Run LLM module — module_run_llm","title":"Run LLM module — module_run_llm","text":"Run LLM module","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_llm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run LLM module — module_run_llm","text":"","code":"module_run_llm(paper, args)"},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_llm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run LLM module — module_run_llm","text":"paper paper object (list object) args list arguments llm()","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_llm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run LLM module — module_run_llm","text":"data frame","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_ml.html","id":null,"dir":"Reference","previous_headings":"","what":"Run machine learning module — module_run_ml","title":"Run machine learning module — module_run_ml","text":"Run machine learning module","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run machine learning module — module_run_ml","text":"","code":"module_run_ml(paper, args, module_dir = \".\")"},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_ml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run machine learning module — module_run_ml","text":"paper paper object (list objects) args list arguments module_dir base directory module, case resources files relative paths","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_ml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run machine learning module — module_run_ml","text":"data frame","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Run text module — module_run_text","title":"Run text module — module_run_text","text":"Run text module","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run text module — module_run_text","text":"","code":"module_run_text(paper, args)"},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run text module — module_run_text","text":"paper paper object (list objects) args list arguments search_text()","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run text module — module_run_text","text":"data frame","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/op-null-default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default value for NULL — op-null-default","title":"Default value for NULL — op-null-default","text":"infix function makes easy replace NULLs default value. inspired way Ruby's operation (||) works.","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/op-null-default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default value for NULL — op-null-default","text":"","code":"x %||% y"},{"path":"https://scienceverse.github.io/papercheck/reference/op-null-default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default value for NULL — op-null-default","text":"x, y x NULL, return y; otherwise returns x.","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/op-null-default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default value for NULL — op-null-default","text":"","code":"1 %||% 2 #> [1] 1 NULL %||% 2 #> [1] 2"},{"path":"https://scienceverse.github.io/papercheck/reference/openalex.html","id":null,"dir":"Reference","previous_headings":"","what":"Get OpenAlex info — openalex","title":"Get OpenAlex info — openalex","text":"Get OpenAlex info","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/openalex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get OpenAlex info — openalex","text":"","code":"openalex(doi)"},{"path":"https://scienceverse.github.io/papercheck/reference/openalex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get OpenAlex info — openalex","text":"doi DOI paper get info ","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/openalex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get OpenAlex info — openalex","text":"list values","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/openalex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get OpenAlex info — openalex","text":"","code":"doi <- \"10.7717/peerj.4375\" if (FALSE) { # \\dontrun{   oa_info <- openalex(doi) } # }"},{"path":"https://scienceverse.github.io/papercheck/reference/paper.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a paper object — paper","title":"Create a paper object — paper","text":"Create new paper object load paper PDF XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/paper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a paper object — paper","text":"","code":"paper(name = \"Demo Paper\", ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/paper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a paper object — paper","text":"name name study file path PDF grobid XML ... arguments add","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/paper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a paper object — paper","text":"study object class scivrs_paper","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/paper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a paper object — paper","text":"","code":"p <- paper(\"Demo Paper\")"},{"path":"https://scienceverse.github.io/papercheck/reference/papercheck_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch Shiny App — papercheck_app","title":"Launch Shiny App — papercheck_app","text":"Create meta-study file interactively shiny app runs locally RStudio web browser (recommended). connect web , data completely private.","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/papercheck_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch Shiny App — papercheck_app","text":"","code":"papercheck_app(study = NULL, quiet = FALSE, ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/papercheck_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch Shiny App — papercheck_app","text":"study optional study load quiet whether show debugging messages console ... arguments pass shiny::runApp","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/papercheck_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch Shiny App — papercheck_app","text":"study object created edited app","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/papercheck_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch Shiny App — papercheck_app","text":"","code":"if (FALSE)  s <- papercheck_app()  # \\dontrun{}"},{"path":"https://scienceverse.github.io/papercheck/reference/pdf2grobid.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a PDF to Grobid XML — pdf2grobid","title":"Convert a PDF to Grobid XML — pdf2grobid","text":"function uses public grobid server maintained Patrice Lopez. can set local grobid server following instructions https://grobid.readthedocs.io/ set argument grobid_url path (probably http://localhost:8070)","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/pdf2grobid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a PDF to Grobid XML — pdf2grobid","text":"","code":"pdf2grobid(   filename,   save_path = \".\",   grobid_url = \"https://kermitt2-grobid.hf.space\" )"},{"path":"https://scienceverse.github.io/papercheck/reference/pdf2grobid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a PDF to Grobid XML — pdf2grobid","text":"filename path PDF save_path directory file path save ; set NULL save temp file grobid_url URL grobid server","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/pdf2grobid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a PDF to Grobid XML — pdf2grobid","text":"XML object","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_module_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Module List Object — print.ppchk_module_list","title":"Print Module List Object — print.ppchk_module_list","text":"Print Module List Object","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_module_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Module List Object — print.ppchk_module_list","text":"","code":"# S3 method for class 'ppchk_module_list' print(x, ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_module_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Module List Object — print.ppchk_module_list","text":"x ppchk_module_list object ... Additional parameters print","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_module_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Module Output — print.ppchk_module_output","title":"Print Module Output — print.ppchk_module_output","text":"Print Module Output","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_module_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Module Output — print.ppchk_module_output","text":"","code":"# S3 method for class 'ppchk_module_output' print(x, ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_module_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Module Output — print.ppchk_module_output","text":"x ppchk_module_output object ... Additional parameters print","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Validation List Object — print.ppchk_validate","title":"Print Validation List Object — print.ppchk_validate","text":"Print Validation List Object","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Validation List Object — print.ppchk_validate","text":"","code":"# S3 method for class 'ppchk_validate' print(x, ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Validation List Object — print.ppchk_validate","text":"x ppchk_validate object ... Additional parameters print","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/print.scivrs_paper.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Paper Object — print.scivrs_paper","title":"Print Paper Object — print.scivrs_paper","text":"Print Paper Object","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/print.scivrs_paper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Paper Object — print.scivrs_paper","text":"","code":"# S3 method for class 'scivrs_paper' print(x, ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/print.scivrs_paper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Paper Object — print.scivrs_paper","text":"x scivrs_paper list ... Additional parameters print","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/psychsci.html","id":null,"dir":"Reference","previous_headings":"","what":"Psychologial Science Open Access Paper Set — psychsci","title":"Psychologial Science Open Access Paper Set — psychsci","text":"250 open access papers Psychological Science.","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/psychsci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Psychologial Science Open Access Paper Set — psychsci","text":"","code":"psychsci"},{"path":"https://scienceverse.github.io/papercheck/reference/psychsci.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Psychologial Science Open Access Paper Set — psychsci","text":"list 250 paper objects","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/psychsci.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Psychologial Science Open Access Paper Set — psychsci","text":"https://journals.sagepub.com/home/pss","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read file of unknown type — read_file","title":"Read file of unknown type — read_file","text":"Read file unknown type","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read file of unknown type — read_file","text":"","code":"read_file(path)"},{"path":"https://scienceverse.github.io/papercheck/reference/read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read file of unknown type — read_file","text":"path path file","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read file of unknown type — read_file","text":"data frame","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paper from grobid XML file — read_grobid","title":"Get paper from grobid XML file — read_grobid","text":"can create grobid XML file paper PDF https://huggingface.co/spaces/kermitt2/grobid.","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paper from grobid XML file — read_grobid","text":"","code":"read_grobid(filename)"},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paper from grobid XML file — read_grobid","text":"filename path XML file, vector file paths, path directory containing XML files","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paper from grobid XML file — read_grobid","text":"paper object class scivrs_paper, list paper objects","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paper from grobid XML file — read_grobid","text":"","code":"filename <- demoxml() paper <- read_grobid(filename)"},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid_xml.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in grobid XML — read_grobid_xml","title":"Read in grobid XML — read_grobid_xml","text":"Read grobid XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid_xml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in grobid XML — read_grobid_xml","text":"","code":"read_grobid_xml(filename)"},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid_xml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in grobid XML — read_grobid_xml","text":"filename path XML file read","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid_xml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in grobid XML — read_grobid_xml","text":"XML object","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paper from text — read_text","title":"Get paper from text — read_text","text":"Get paper text","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paper from text — read_text","text":"","code":"read_text(txt, id = \"\")"},{"path":"https://scienceverse.github.io/papercheck/reference/read_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paper from text — read_text","text":"txt text read paper object, path text file id ID use paper (e.g., DOI) defaults filename txt path","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paper from text — read_text","text":"paper object class scivrs_paper","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paper from text — read_text","text":"","code":"paper <- read_text(\"This is my paper. That's it!\")"},{"path":"https://scienceverse.github.io/papercheck/reference/report.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a report — report","title":"Create a report — report","text":"Create report","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a report — report","text":"","code":"report(   paper,   modules = c(\"imprecise-p\", \"marginal\", \"statcheck\", \"osf-check\", \"retractionwatch\",     \"ref-consistency\"),   output_file = paste0(paper$name, \"_report.\", output_format),   output_format = c(\"qmd\", \"html\", \"pdf\") )"},{"path":"https://scienceverse.github.io/papercheck/reference/report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a report — report","text":"paper paper object modules vector modules run (names built-modules paths custom modules) output_file name output file output_format format create report ","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a report — report","text":"file path report saved ","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a report — report","text":"","code":"if (FALSE) { # \\dontrun{ filename <- demoxml() paper <- read_grobid(filename) report(paper) } # }"},{"path":"https://scienceverse.github.io/papercheck/reference/retractionwatch.html","id":null,"dir":"Reference","previous_headings":"","what":"RetractionWatch data — retractionwatch","title":"RetractionWatch data — retractionwatch","text":"DOIs nature statements RetractionWatch database (downloaded 2024-05-23)","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/retractionwatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RetractionWatch data — retractionwatch","text":"","code":"retractionwatch"},{"path":"https://scienceverse.github.io/papercheck/reference/retractionwatch.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"RetractionWatch data — retractionwatch","text":"data frame 44784 rows 2 columns: doi Document ID retractionwatch Nature note(s)","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/retractionwatch.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"RetractionWatch data — retractionwatch","text":"https://api.labs.crossref.org/data/retractionwatch","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/search_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Search text — search_text","title":"Search text — search_text","text":"Search text paper list paper objects. Also works table results search_text() call.","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/search_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search text — search_text","text":"","code":"search_text(   paper,   pattern = \".*\",   section = NULL,   return = c(\"sentence\", \"paragraph\", \"div\", \"section\", \"match\", \"all\"),   ignore.case = TRUE,   ... )"},{"path":"https://scienceverse.github.io/papercheck/reference/search_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search text — search_text","text":"paper paper object list paper objects pattern regex pattern search section section(s) search return kind text return, full sentence, paragraph, div, section text , just (regex) match, body text ignore.case whether ignore case text searching ... additional arguments pass grep() regexpr(), fixed = TRUE","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/search_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search text — search_text","text":"data frame matches","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/search_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search text — search_text","text":"","code":"filename <- demoxml() paper <- read_grobid(filename)  search_text(paper, \"p\\\\s*(=|<)\\\\s*[0-9\\\\.]+\", return = \"match\") #> # A tibble: 2 × 7 #>   text       section header    div     p     s id                  #>   <chr>      <chr>   <chr>   <dbl> <dbl> <int> <chr>               #> 1 p = 0.005. results Results     3     1     2 to_err_is_human.xml #> 2 p = 0.152. results Results     3     2     1 to_err_is_human.xml"},{"path":"https://scienceverse.github.io/papercheck/reference/set_llm_max_calls.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the maximum number of calls to the LLM — set_llm_max_calls","title":"Set the maximum number of calls to the LLM — set_llm_max_calls","text":"Set maximum number calls LLM","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/set_llm_max_calls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the maximum number of calls to the LLM — set_llm_max_calls","text":"","code":"set_llm_max_calls(n = 10)"},{"path":"https://scienceverse.github.io/papercheck/reference/set_llm_max_calls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the maximum number of calls to the LLM — set_llm_max_calls","text":"n maximum number calls llm() function can make","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/site_down.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if site is available — site_down","title":"Check if site is available — site_down","text":"Check site available","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/site_down.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if site is available — site_down","text":"","code":"site_down(url, msg = \"The website %s is not available\", error = TRUE)"},{"path":"https://scienceverse.github.io/papercheck/reference/site_down.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if site is available — site_down","text":"url URL check msg message contains %s replace site name error Throw error site ; otherwise return logical","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/site_down.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if site is available — site_down","text":"logical","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Stats — stats","title":"Check Stats — stats","text":"Check Stats","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Stats — stats","text":"","code":"stats(text, ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Stats — stats","text":"text search table (list paper objects) ... arguments pass statcheck()","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Stats — stats","text":"table statistics","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Stats — stats","text":"","code":"filename <- demoxml() papers <- read_grobid(filename) stats(papers) #>   test_type df1  df2 test_comp test_value p_comp reported_p  computed_p #> 1         t  NA 97.7         =       2.90      =      0.005 0.004609391 #> 2         t  NA 97.2         =      -1.96      =      0.152 0.052859364 #>                          raw error decision_error one_tailed_in_txt apa_factor #> 1   t(97.7) = 2.9, p = 0.005 FALSE          FALSE             FALSE          1 #> 2 t(97.2) = -1.96, p = 0.152  TRUE          FALSE             FALSE          1 #>                                                                                                                                                                                                                      text #> 1                                   On average researchers in the experimental (app) condition made fewer mistakes (M = 9.12) than researchers in the control (checklist) condition (M = 10.9), t(97.7) = 2.9, p = 0.005. #> 2 On average researchers in the experimental condition found the app marginally significantly more useful (M = 5.06) than researchers in the control condition found the checklist (M = 4.5), t(97.2) = -1.96, p = 0.152. #>   section  header div p s                  id #> 1 results Results   3 1 2 to_err_is_human.xml #> 2 results Results   3 2 1 to_err_is_human.xml"},{"path":"https://scienceverse.github.io/papercheck/reference/study.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a study object — study","title":"Create a study object — study","text":"Create new study object","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/study.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a study object — study","text":"","code":"study(name = \"Demo Study\", ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/study.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a study object — study","text":"name name study ... arguments add","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/study.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a study object — study","text":"study object class scivrs_study","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/text_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Text features — text_features","title":"Text features — text_features","text":"Text features","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/text_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Text features — text_features","text":"","code":"text_features(   text,   words,   word_count = TRUE,   has_number = TRUE,   has_symbol = c(has_equals = \"=\"),   stem_language = \"porter\",   values = c(\"presence\", \"count\") )"},{"path":"https://scienceverse.github.io/papercheck/reference/text_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Text features — text_features","text":"text vector text strings extract features words vector words find word_count whether include word count has_number whether code presence numbers has_symbol named vector symbols detect stem_language language use stemming words, SnowballC::getStemLanguages(), set FALSE stemming values whether return count words (0+) string presence (0/1)","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/text_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Text features — text_features","text":"data frame features text","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/tl_accuracy.html","id":null,"dir":"Reference","previous_headings":"","what":"Traffic Light Accuracy — tl_accuracy","title":"Traffic Light Accuracy — tl_accuracy","text":"Traffic Light Accuracy","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/tl_accuracy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Traffic Light Accuracy — tl_accuracy","text":"","code":"tl_accuracy(validation, yes = \"green\", no = \"red\")"},{"path":"https://scienceverse.github.io/papercheck/reference/tl_accuracy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Traffic Light Accuracy — tl_accuracy","text":"validation validation object yes value traffic lights detection (usually \"green\") value traffic lights detection (usually \"red\")","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/tl_accuracy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Traffic Light Accuracy — tl_accuracy","text":"list accuracy parameters","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a module — validate","title":"Validate a module — validate","text":"Validate module","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a module — validate","text":"","code":"validate(module, sample, expected = NULL, path = NULL)"},{"path":"https://scienceverse.github.io/papercheck/reference/validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a module — validate","text":"module name module path module sample data frame path tabular data file (csv excel) sample validate , required column id, optional columns table, report, traffic_light expected data frame path file contains expected results table values tabular form; NULL, table column sample table used table checks omitted path base directory relative paths sample table; NULL sample file path, use base directory file","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a module — validate","text":"validation list object","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/verbose.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or get papercheck verbosity — verbose","title":"Set or get papercheck verbosity — verbose","text":"Set get papercheck verbosity","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/verbose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or get papercheck verbosity — verbose","text":"","code":"verbose(verbose = NULL)"},{"path":"https://scienceverse.github.io/papercheck/reference/verbose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or get papercheck verbosity — verbose","text":"verbose logical, sets whether show verbose output messages progress bars","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/verbose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set or get papercheck verbosity — verbose","text":"current option value (logical)","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/verbose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set or get papercheck verbosity — verbose","text":"","code":"verbose() #> [1] TRUE"},{"path":"https://scienceverse.github.io/papercheck/news/index.html","id":"papercheck-0009029-2025-02-26","dir":"Changelog","previous_headings":"","what":"papercheck 0.0.0.9029 (2025-02-26)","title":"papercheck 0.0.0.9029 (2025-02-26)","text":"added author_table() get dataframe author info list paper objects fixed bunch tests now multiple matches sentence possible added back text (acknowledgements, annex, funding notes) full_text paper Fixed bug search_text() omitted duplicate matches sentence using results = “match” Upgraded search string “-p-values” module error numeric value followed “-” Error catching stats() related problem (filed issue statcheck) URLs grobid XML now converted “” using source url, text url, often mangled","code":""},{"path":"https://scienceverse.github.io/papercheck/news/index.html","id":"papercheck-0009028-2025-02-18","dir":"Changelog","previous_headings":"","what":"papercheck 0.0.0.9028 (2025-02-18)","title":"papercheck 0.0.0.9028 (2025-02-18)","text":"added psychsci dataset 250 open access papers Psychological Science added “” option return argument search_text() added info_table() get dataframe info list paper objects experimental functions text prediction: distinctive_words() text_features()","code":""},{"path":"https://scienceverse.github.io/papercheck/news/index.html","id":"papercheck-0009027-2025-02-07","dir":"Changelog","previous_headings":"","what":"papercheck 0.0.0.9027 (2025-02-07)","title":"papercheck 0.0.0.9027 (2025-02-07)","text":"Removed ChatGPT added groq support Updated llm() associated functions like llm_models() Working div vs section aggregation search_text()","code":""},{"path":"https://scienceverse.github.io/papercheck/news/index.html","id":"papercheck-0009026-2025-02-06","dir":"Changelog","previous_headings":"","what":"papercheck 0.0.0.9026 (2025-02-06)","title":"papercheck 0.0.0.9026 (2025-02-06)","text":"metascience batch vignettes removed scienceverse dependency revised validation functions added tl_accuracy()","code":""},{"path":"https://scienceverse.github.io/papercheck/news/index.html","id":"papercheck-0009025-2025-02-04","dir":"Changelog","previous_headings":"","what":"papercheck 0.0.0.9025 (2025-02-04)","title":"papercheck 0.0.0.9025 (2025-02-04)","text":"Added expand_text()","code":""},{"path":"https://scienceverse.github.io/papercheck/news/index.html","id":"papercheck-0009024-2025-01-31","dir":"Changelog","previous_headings":"","what":"papercheck 0.0.0.9024 (2025-01-31)","title":"papercheck 0.0.0.9024 (2025-01-31)","text":"Added validate() function vignette","code":""}]
