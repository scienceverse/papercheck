[{"path":"https://scienceverse.github.io/papercheck/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 papercheck authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"search-strategies","dir":"Articles","previous_headings":"","what":"Search Strategies","title":"Modules","text":"Modules can use four search strategies, JSON specification. four types take either paper object resulting search table input, making easy chain modules together.","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"text-search","dir":"Articles","previous_headings":"Search Strategies","what":"Text Search","title":"Modules","text":"checks can done simple text search, can create module provides arguments search_text() function. ‚Äútext‚Äù key takes dictionary argumants search_text() function. Foe example, following JSON specification defines arguments needed search instances p-values text return just matched text.","code":"{   \"title\": \"List All P-Values\",   \"description\": \"List all p-values in the text, returning the matched text (e.g., 'p = 0.04') and document location in a table.\",   \"text\": {     \"pattern\": \"(?<=[^a-z])p-?(value)?\\\\s*[<>=‚â§‚â•]{1,2}\\\\s*(n\\\\.?s\\\\.?|\\\\d?\\\\.\\\\d+e?-?\\\\d*)\",     \"return\": \"match\",     \"perl\": true   } }"},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"code","dir":"Articles","previous_headings":"Search Strategies","what":"Code","title":"Modules","text":"checks require bit logic, can include R code directly (likely) reference external .R file. ‚Äúcode‚Äù key takes dictionary ‚Äúcode‚Äù ‚Äúpath‚Äù file containing code. can optionally list ‚Äúpackages‚Äù required users can prompted install unavailable packages. Code must end list contains values return. item table table returned values, optional item traffic_light contains classification result (see ).","code":"{   \"title\": \"Check Status of OSF Links\",   \"description\": \"List all OSF links and whether they are open, closed, or do not exist.\",   \"code\": {     \"packages\": [\"papercheck\", \"httr\", \"dplyr\"],     \"path\": \"osf-check.R\"   } }"},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"machine-learning","dir":"Articles","previous_headings":"Search Strategies","what":"Machine Learning","title":"Modules","text":"machine learning aspect papercheck development, currently uses BERT models classify text. ‚Äúml‚Äù key takes dictionary arguments ml(), additional optional setting filter output table matching resposes.","code":"{   \"title\": \"Sample Size\",   \"description\": \"[DEMO] Classify each sentence for whether it contains sample-size information, returning only sentences with probable sample-size info.\",   \"ml\" : {     \"model_dir\": \"sample-size\",     \"class_col\": \"has_sample_size\",     \"map\": {\"0\": \"no\", \"1\": \"yes\"},     \"return_prob\": false,     \"filter\": \"yes\"   } }"},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"generative-ai","dir":"Articles","previous_headings":"Search Strategies","what":"Generative AI","title":"Modules","text":"‚Äúai‚Äù key takes dictionary arguments gpt() function.","code":"{   \"title\": \"Summarise Sections\",   \"description\": \"Generate a 1-sentence summary for each section\",   \"ai\": {     \"query\": \"Summarise this section briefly, in one sentence.\",     \"group_by\": [\"id\", \"section\"]   } }"},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"report-info","dir":"Articles","previous_headings":"","what":"Report Info","title":"Modules","text":"using modules build report, need specify type output corresponds good practice practice may need improvement. ‚Äútraffic-light‚Äù ‚Äúreport‚Äù keys.","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"traffic-lights","dir":"Articles","previous_headings":"Report Info","what":"Traffic Lights","title":"Modules","text":"5 kinds traffic lights: üü¢ problems detected; üü° something check; üî¥ possible problems detected; üîµ informational ; ‚ö™Ô∏è applicable; ‚ö´Ô∏è check failed simplest way set traffic lights specify meaning ‚Äúfound‚Äù ‚Äú-found‚Äù. module produces 0 rows output table, traffic light takes ‚Äúfound‚Äù value, otherwise ‚Äú-found‚Äù value. using ‚Äúcode‚Äù type, can also specify traffic light returned list.","code":"{   \"title\": \"List All P-Values\",   \"description\": \"List all p-values in the text, returning the matched text (e.g., 'p = 0.04') and document location in a table.\",   \"text\": {     \"pattern\": \"(?<=[^a-z])p-?(value)?\\\\s*[<>=‚â§‚â•]{1,2}\\\\s*(n\\\\.?s\\\\.?|\\\\d?\\\\.\\\\d+e?-?\\\\d*)\",     \"return\": \"match\",     \"perl\": true   },   \"traffic_light\": {     \"found\": \"info\",     \"not-found\": \"na\"   } } # code for imprecise-p module p <- module_run(paper, \"all-p-values\")$table p$p_comp <- gsub(\"p-?(value)?\\\\s*|\\\\s*\\\\d?\\\\.\\\\d+e?-?\\\\d*\", \"\", p$text) p$p_value <- gsub(\"^p-?(value)?\\\\s*[<>=‚â§‚â•]{1,2}\\\\s*\", \"\", p$text) p$p_value <- suppressWarnings(as.numeric(p$p_value)) p$imprecise <- p$p_comp == \"<\" & p$p_value > .001 p$imprecise <- p$imprecise | p$p_comp == \">\" p$imprecise <- p$imprecise | is.na(p$p_value) cols <- c(\"text\", \"section\", \"header\", \"div\", \"p\", \"s\", \"id\")  if (nrow(p) == 0) {   tl <- \"na\" } else if (any(p$imprecise)) {   tl <- \"red\" } else if (!all(p$imprecise)) {   tl <- \"green\" } else {   tl <- \"yellow\" }  list(   table = p[p$imprecise, cols],   traffic_light = tl )"},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"report","dir":"Articles","previous_headings":"Report Info","what":"Report","title":"Modules","text":"text want include report specified ‚Äúreport‚Äù key. can set different text traffic light, /text include reports.","code":"{   \"title\": \"Reference Consistency\",   \"description\": \"Check if all references are cited and all citations are referenced\",   \"code\": {     \"packages\": [\"dplyr\"],     \"path\": \"ref-consistency.R\"   },   \"report\": {     \"all\": \"This module relies on Grobid correctly parsing the references. There may be some false positives.\",     \"red\": \"There are references that are not cited or citations that are not referenced\",     \"green\": \"All references were cited and citations were referenced\",     \"na\": \"No citations/references were detected\"   } }"},{"path":"https://scienceverse.github.io/papercheck/articles/modules.html","id":"authors","dir":"Articles","previous_headings":"Report Info","what":"Authors","title":"Modules","text":"can also include author information following format:","code":"{   \"title\": \"List All P-Values\",   \"description\": \"List all p-values in the text, returning the matched text (e.g., 'p = 0.04') and document location in a table.\",   \"authors\": [{     \"orcid\": \"0000-0002-7523-5539\",     \"name\":{       \"surname\": \"DeBruine\",       \"given\": \"Lisa\"     },     \"email\": \"debruine@gmail.com\"   }],   \"text\": {     \"pattern\": \"(?<=[^a-z])p-?(value)?\\\\s*[<>=‚â§‚â•]{1,2}\\\\s*(n\\\\.?s\\\\.?|\\\\d?\\\\.\\\\d+e?-?\\\\d*)\",     \"return\": \"match\",     \"perl\": true   },   \"traffic_light\": {     \"found\": \"info\",     \"not-found\": \"na\"   } }"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"papercheck","text":"can install development version papercheck GitHub : can launch interactive shiny app version code :","code":"# install.packages(\"devtools\") devtools::install_github(\"scienceverse/papercheck\") library(papercheck) papercheck_app()"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"load-from-pdf","dir":"Articles","previous_headings":"Installation","what":"Load from PDF","title":"papercheck","text":"function pdf2grobid() can read PDF files save TEI format created grobid. requires internet connection takes seconds per paper, done results saved later use. server unavailable, can use grobid web interface. can set local grobid server following instructions https://grobid.readthedocs.io/. easiest way use Docker. can set grobid_url local path http://localhost:8070.","code":"pdf_file <- demopdf() xml_file <- pdf2grobid(pdf_file) docker run --rm --init --ulimit core=0 -p 8070:8070 lfoppiano/grobid:0.8.1 xml_file <- pdf2grobid(pdf_file, grobid_url = \"http://localhost:8070\")"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"load-from-xml","dir":"Articles","previous_headings":"Installation","what":"Load from XML","title":"papercheck","text":"function read_grobid() can read XML files parsed grobid.","code":"paper <- read_grobid(xml_file)"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"load-from-non-pdf-document","dir":"Articles","previous_headings":"Installation","what":"Load from non-PDF document","title":"papercheck","text":"take advantage grobid‚Äôs ability parse references aspects papers, now best way convert papers PDF. However, papercheck can read plain text character object text/docx file read_text().","code":"text <- \"Abstract  This is my very short paper. It has two sentences.\" shortpaper <- read_text(text, id = \"shortpaper\") shortpaper$full_text #> # A tibble: 3 √ó 7 #>   text                         section  header     div     p     s id         #>   <chr>                        <chr>    <chr>    <int> <dbl> <int> <chr>      #> 1 Abstract                     abstract Abstract     1     0     1 shortpaper #> 2 This is my very short paper. abstract Abstract     1     1     1 shortpaper #> 3 It has two sentences.        abstract Abstract     1     1     2 shortpaper filename <- system.file(\"extdata/to_err_is_human.docx\",                          package = \"papercheck\") paper_from_doc <- read_text(filename)"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"full-text","dir":"Articles","previous_headings":"","what":"Full Text","title":"papercheck","text":"can access parsed table full text paper via s$full_text, may find convenient use function search_text(). defaults return data table sentence, section type, header, div, paragraph sentence numbers, file name. (section type best guess headers, may always accurate.)","code":"text <- search_text(paper)"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"pattern","dir":"Articles","previous_headings":"Full Text","what":"Pattern","title":"papercheck","text":"can search specific word phrase setting pattern argument. pattern regex string default; set fixed = TRUE want find exact text matches.","code":"text <- search_text(paper, pattern = \"papercheck\")"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"section","dir":"Articles","previous_headings":"Full Text","what":"Section","title":"papercheck","text":"Set section vector sections search .","code":"text <- search_text(paper, \"papercheck\",                      section = \"abstract\")"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"return","dir":"Articles","previous_headings":"Full Text","what":"Return","title":"papercheck","text":"Set return one ‚Äúsentence‚Äù, ‚Äúparagraph‚Äù, ‚Äúsection‚Äù, ‚Äúmatch‚Äù control gets returned.","code":"text <- search_text(paper, \"papercheck\",                      section = \"intro\",                      return = \"paragraph\")"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"regex-matches","dir":"Articles","previous_headings":"Full Text","what":"Regex matches","title":"papercheck","text":"can also return just matched text regex search setting return = \"match\". extra ... arguments search_text() passed grep(), perl = TRUE allows use complex regex, like .","code":"pattern <- \"[a-zA-Z]\\\\S*\\\\s*(=|<)\\\\s*[0-9\\\\.,-]*\\\\d\" text <- search_text(paper, pattern, return = \"match\", perl = TRUE)"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"chatgpt","dir":"Articles","previous_headings":"","what":"ChatGPT","title":"papercheck","text":"can query extracted text papers ChatGPT.","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"setup","dir":"Articles","previous_headings":"ChatGPT","what":"Setup","title":"papercheck","text":"Run need provide API key. can enter manually call gpt(), add following lines .Renviron file user project.","code":"gpt_setup() CHATGPT_KEY=\"sk-proj-abcdefghijklmnopqrs0123456789ABCDEFGHIJKLMNOPQRS\" RETICULATE_PYTHON=\"~/.virtualenvs/r-reticulate/bin/python\" # useful if you aren't sure where this file is usethis::edit_r_environ()"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"gpt-queries","dir":"Articles","previous_headings":"ChatGPT","what":"GPT Queries","title":"papercheck","text":"can ask ChatGPT process text. Use search_text() first narrow text want query. , returned first two papers‚Äô introduction sections, returned full section. asked ChatGPT ‚Äúhypothesis study?‚Äù.","code":"hypotheses <- search_text(papers[1:2],                            section = \"intro\",                            return = \"section\") query <- \"What is the hypothesis of this study?\" gpt_hypo <- gpt(hypotheses, query)"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"batch-processing","dir":"Articles","previous_headings":"","what":"Batch Processing","title":"papercheck","text":"functions pdf2grobid() read_grobid() also work folder files, returning list XML file paths paper objects, respectively. functions search_text() gpt() also work list paper objects.","code":"grobid_dir <- demodir()  papers <- read_grobid(grobid_dir)  hypotheses <- search_text(papers, \"hypothesi\",                            section = \"intro\",                            return = \"paragraph\")"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"modules","dir":"Articles","previous_headings":"","what":"Modules","title":"papercheck","text":"Papercheck designed modularly, can add modules check anything. comes set pre-defined modules, hope people share modules.","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"module-list","dir":"Articles","previous_headings":"Modules","what":"Module List","title":"papercheck","text":"can see list built-modules function .","code":"module_list() #>  * ai-summarise: Generate a 1-sentence summary for each section #>  * all-p-values: List all p-values in the text, returning the matched text (e.g., 'p = 0.04') and document location in a table. #>  * all-urls: List all the URLs in the main text #>  * imprecise-p: List any p-values reported with insufficient precision (e.g., p < .05 or p = n.s.) #>  * marginal: List all sentences that describe an effect as 'marginally significant'. #>  * osf-check: List all OSF links and whether they are open, closed, or do not exist. #>  * ref-consistency: Check if all references are cited and all citations are referenced #>  * retractionwatch: Flag any cited papers in the RetractionWatch database #>  * statcheck: Check consistency of p-values and test statistics"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"running-modules","dir":"Articles","previous_headings":"Modules","what":"Running modules","title":"papercheck","text":"run built-module paper, can reference name.","code":"p <- module_run(paper, \"all-p-values\")"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"creating-modules","dir":"Articles","previous_headings":"Modules","what":"Creating modules","title":"papercheck","text":"can create modules specifying arguments search_text() gpt() JSON format /including R code. Modules can also contain instructions reporting, give ‚Äútraffic lights‚Äù whether check passed failed, include appropriate text feedback report. See modules vignette details. abbreviated example module detects p-values text returns matching text.","code":"{   \"title\": \"List All P-Values\",   \"description\": \"List all p-values in the text, returning the matched text (e.g., 'p = 0.04') and document location in a table.\",   \"text\": {     \"pattern\": \"(?<=[^a-z])p-?(value)?\\\\s*[<>=‚â§‚â•]{1,2}\\\\s*(n\\\\.?s\\\\.?|\\\\d?\\\\.\\\\d+e?-?\\\\d*)\",     \"return\": \"match\",     \"perl\": true   } }"},{"path":"https://scienceverse.github.io/papercheck/articles/papercheck.html","id":"reports","dir":"Articles","previous_headings":"","what":"Reports","title":"papercheck","text":"can generate report set modules. default set c(\"imprecise-p\", \"marginal\", \"osf-check\", \"retractionwatch\", \"ref-consistency\") See example report.","code":"report(paper, output_format = \"qmd\")"},{"path":"https://scienceverse.github.io/papercheck/articles/report-example.html","id":"imprecise-p-values","dir":"Articles","previous_headings":"","what":"Imprecise P-Values","title":"Example Report","text":"may reported imprecise p-values","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/report-example.html","id":"marginal-significance","dir":"Articles","previous_headings":"","what":"Marginal Significance","title":"Example Report","text":"described effects marginally/borderline/close significant. better write ‚Äòreach threshold alpha significance‚Äô.","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/report-example.html","id":"check-status-of-osf-links","dir":"Articles","previous_headings":"","what":"Check Status of OSF Links","title":"Example Report","text":"detected closed OSF links","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/report-example.html","id":"retractionwatch","dir":"Articles","previous_headings":"","what":"RetractionWatch","title":"Example Report","text":"cited papers Retraction Watch database; double-check acknowledging retracted status citing .","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/report-example.html","id":"reference-consistency","dir":"Articles","previous_headings":"","what":"Reference Consistency","title":"Example Report","text":"references cited citations referenced","code":""},{"path":"https://scienceverse.github.io/papercheck/articles/validate.html","id":"validation-sample","dir":"Articles","previous_headings":"","what":"Validation sample","title":"Validation","text":"Set papers validation sample. need directory XML files created pdf2grobid(). example, ‚Äôll set everything temporary directory.","code":"# create validation directory in temp dir valdir <- tempdir() |> file.path(\"validate\") dir.create(valdir, showWarnings = FALSE)  # copy built-in XML files to xml directory xmldir <- file.path(valdir, \"xml\") dir.create(xmldir, showWarnings = FALSE) xmls <- list.files(demodir(), \"\\\\.xml$\", full.names = TRUE) file.copy(xmls, xmldir) #> [1] TRUE TRUE TRUE"},{"path":"https://scienceverse.github.io/papercheck/articles/validate.html","id":"sample-data","dir":"Articles","previous_headings":"","what":"Sample data","title":"Validation","text":"Create data frame info paper. One column must called ‚Äúxml‚Äù contain paths xml files (relative validation file location). possible columns ‚Äútable‚Äù, ‚Äúreport‚Äù, ‚Äútraffic_light‚Äù, contain expects values items module ‚Äôre testing. want check just first row text column return table, omit table column use method next section. code one inaccurate traffic light (‚Äúred‚Äù) demonstration purposes.","code":"sample <- data.frame(   xml =  file.path(\"xml\", list.files(xmldir)),   table = c(\"faceresearch.org\", \"https://osf.io/mwzuq\", \"https://osf.io/pwtrh\"),   report = rep(\"\", 3), # this module has no report   traffic_light = c(\"info\", \"info\", \"red\") )"},{"path":"https://scienceverse.github.io/papercheck/articles/validate.html","id":"expected-table","dir":"Articles","previous_headings":"","what":"Expected Table","title":"Validation","text":"tables returned module ‚Äôre validating can one row, want check columns ‚Äútext‚Äù, need add expected values separate data frame. One column must ‚Äúxml‚Äù join table. columns names columns returned module. can omit columns checked validation. , validate text header columns (making one mistake header column demonstration purposes).","code":"exp_table <- data.frame(   xml = rep(sample$xml, c(2, 3, 2)),   text = c(\"faceresearch.org\", \"stumbleupon.com\",            rep(\"https://osf.io/mwzuq\", 3),            rep(\"https://osf.io/pwtrh\", 2)),   header = c(\"Participants\", \"Participants\",               \"Methods\", \"Procedure\", \"Analysis\",              \"Intro\", \"Attitude\") )  exp_table #>                xml                 text       header #> 1 xml/eyecolor.xml     faceresearch.org Participants #> 2 xml/eyecolor.xml      stumbleupon.com Participants #> 3   xml/incest.xml https://osf.io/mwzuq      Methods #> 4   xml/incest.xml https://osf.io/mwzuq    Procedure #> 5   xml/incest.xml https://osf.io/mwzuq     Analysis #> 6   xml/prereg.xml https://osf.io/pwtrh        Intro #> 7   xml/prereg.xml https://osf.io/pwtrh     Attitude"},{"path":"https://scienceverse.github.io/papercheck/articles/validate.html","id":"run-validation","dir":"Articles","previous_headings":"","what":"Run Validation","title":"Validation","text":"don‚Äôt include expected results table, table check just check first result text column module results match table column sample. include expected results table, assess data matching module results table. can explore problems looking sample returned tables. table check false, one missing one extra result. can view validated results table paper‚Ä¶ ‚Ä¶compare expected results.","code":"v <- validate(\"all-urls\", sample, path = valdir)  v #>  Validated matches from a sample of 3: #> * tables: 100% #> * reports: 100% #> * traffic lights: 67% v <- validate(\"all-urls\", sample, exp_table, path = valdir)  v #>  Validated matches from a sample of 3: #> * tables: 67% #> * reports: 100% #> * traffic lights: 67% # show rows where the traffic light check is false v$sample |>   dplyr::filter(!tl_check) #>              xml                table report traffic_light report_ver tl_ver #> 1 xml/prereg.xml https://osf.io/pwtrh                  red              info #>   results_missing results_extra table_check report_check tl_check #> 1               1             1       FALSE         TRUE    FALSE # show rows where the table check is false v$sample |>   dplyr::filter(!table_check) #>              xml                table report traffic_light report_ver tl_ver #> 1 xml/prereg.xml https://osf.io/pwtrh                  red              info #>   results_missing results_extra table_check report_check tl_check #> 1               1             1       FALSE         TRUE    FALSE v$results_table |>   dplyr::filter(xml == \"xml/prereg.xml\") #>              xml                 text #> 1 xml/prereg.xml https://osf.io/pwtrh #> 2 xml/prereg.xml https://osf.io/pwtrh #>                                                                    header #> 1 Are One-tailed Tests and Sequential Analyses Appropriate in Psychology? #> 2                                                                Attitude exp_table |>   dplyr::filter(xml == \"xml/prereg.xml\") #>              xml                 text   header #> 1 xml/prereg.xml https://osf.io/pwtrh    Intro #> 2 xml/prereg.xml https://osf.io/pwtrh Attitude"},{"path":"https://scienceverse.github.io/papercheck/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lisa DeBruine. Author, maintainer. Daniel Lakens. Author. Cristian Mesquida. Contractor.","code":""},{"path":"https://scienceverse.github.io/papercheck/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"DeBruine L, Lakens D (2025). papercheck: Check Scientific Papers Best Practices. R package version 0.0.0.9024, https://scienceverse.github.io/papercheck/, https://github.com/debruine/papercheck.","code":"@Manual{,   title = {papercheck: Check Scientific Papers for Best Practices},   author = {Lisa DeBruine and Daniel Lakens},   year = {2025},   note = {R package version 0.0.0.9024, https://scienceverse.github.io/papercheck/},   url = {https://github.com/debruine/papercheck}, }"},{"path":"https://scienceverse.github.io/papercheck/index.html","id":"papercheck-","dir":"","previous_headings":"","what":"Check Scientific Papers for Best Practices","title":"Check Scientific Papers for Best Practices","text":"goal papercheck automatically check scientific papers best practices.","code":""},{"path":"https://scienceverse.github.io/papercheck/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Check Scientific Papers for Best Practices","text":"can install development version papercheck GitHub : can launch interactive shiny app version code :","code":"# install.packages(\"devtools\") devtools::install_github(\"scienceverse/papercheck\") papercheck_app()"},{"path":"https://scienceverse.github.io/papercheck/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Check Scientific Papers for Best Practices","text":"Convert PDF grobid XML format, read scienceverse paper object.","code":"library(papercheck) pdf <- demopdf() # use the path of your own PDF grobid <- pdf2grobid(pdf) paper <- read_grobid(grobid)"},{"path":"https://scienceverse.github.io/papercheck/index.html","id":"search-text","dir":"","previous_headings":"Example","what":"Search Text","title":"Check Scientific Papers for Best Practices","text":"Search returned text. regex pattern searches text looks like statistical values (e.g., N=313 p = 0.17).","code":"pattern <- \"[a-zA-Z]\\\\S*\\\\s*(=|<)\\\\s*[0-9\\\\.-]*\\\\d\" text <- search_text(paper, pattern,                      return = \"match\",                      perl = TRUE)"},{"path":"https://scienceverse.github.io/papercheck/index.html","id":"chatgpt","dir":"","previous_headings":"Example","what":"ChatGPT","title":"Check Scientific Papers for Best Practices","text":"can ask ChatGPT process text. Use search_text() first narrow text want query. , returned first two papers‚Äô introduction sections, returned full section. asked ChatGPT ‚Äúhypothesis study?‚Äù.","code":"# ask chatGPT a question hypotheses <- search_text(papers[1:2],                            section = \"intro\",                            return = \"section\") query <- \"What is the hypothesis of this study?\" gpt_hypo <- gpt(hypotheses, query)"},{"path":"https://scienceverse.github.io/papercheck/index.html","id":"batch-processing","dir":"","previous_headings":"Example","what":"Batch Processing","title":"Check Scientific Papers for Best Practices","text":"functions pdf2grobid() read_grobid() also work folder files, returning list XML file paths paper objects, respectively. functions search_text() gpt() also work list paper objects.","code":"# read in all the XML files in the demo directory grobid_dir <- demodir() papers <- read_grobid(grobid_dir)  # select sentences in the intros containing the text \"previous\" previous <- search_text(papers, \"previous\",                          section = \"intro\",                          return = \"sentence\")"},{"path":"https://scienceverse.github.io/papercheck/index.html","id":"modules","dir":"","previous_headings":"Example","what":"Modules","title":"Check Scientific Papers for Best Practices","text":"Papercheck designed modularly, can add modules check anything. comes set pre-defined modules, hope people share modules. can see list built-modules function . ai-summarise: Generate 1-sentence summary section -p-values: List p-values text, returning matched text (e.g., ‚Äòp = 0.04‚Äô) document location table. -urls: List URLs main text imprecise-p: List p-values reported insufficient precision (e.g., p < .05 p = n.s.) marginal: List sentences describe effect ‚Äòmarginally significant‚Äô. osf-check: List OSF links whether open, closed, exist. ref-consistency: Check references cited citations referenced retractionwatch: Flag cited papers RetractionWatch database sample-size-ml: Classify sentence whether contains sample-size information. run built-module paper, can reference name.","code":"module_list() p <- module_run(paper, \"all-p-values\")"},{"path":"https://scienceverse.github.io/papercheck/index.html","id":"reports","dir":"","previous_headings":"Example","what":"Reports","title":"Check Scientific Papers for Best Practices","text":"can generate report set modules. default set c(\"imprecise-p\", \"marginal\", \"osf-check\", \"retractionwatch\", \"ref-consistency\")","code":"paper_path <- report(paper, output_format = \"html\")"},{"path":"https://scienceverse.github.io/papercheck/reference/concat_tables.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate tables ‚Äî concat_tables","title":"Concatenate tables ‚Äî concat_tables","text":"Concatenate tables across list scienceverse objects","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/concat_tables.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate tables ‚Äî concat_tables","text":"","code":"concat_tables(papers, name_path)"},{"path":"https://scienceverse.github.io/papercheck/reference/concat_tables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate tables ‚Äî concat_tables","text":"papers list scienceverse study objects name_path vector names get table","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/concat_tables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate tables ‚Äî concat_tables","text":"merged table","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/concat_tables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate tables ‚Äî concat_tables","text":"","code":"grobid_dir <- system.file(\"grobid\", package = \"papercheck\") papers <- read_grobid(grobid_dir) references <- concat_tables(papers, c(\"refs\", \"references\"))"},{"path":"https://scienceverse.github.io/papercheck/reference/crossref.html","id":null,"dir":"Reference","previous_headings":"","what":"Crossref info ‚Äî crossref","title":"Crossref info ‚Äî crossref","text":"Crossref info","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/crossref.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crossref info ‚Äî crossref","text":"","code":"crossref(doi)"},{"path":"https://scienceverse.github.io/papercheck/reference/crossref.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crossref info ‚Äî crossref","text":"doi DOI paper get info ","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/crossref.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crossref info ‚Äî crossref","text":"crossref data","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/crossref.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Crossref info ‚Äî crossref","text":"","code":"doi <- \"10.7717/peerj.4375\" if (FALSE) { # \\dontrun{   cr_info <- crossref(doi) } # }"},{"path":"https://scienceverse.github.io/papercheck/reference/demodir.html","id":null,"dir":"Reference","previous_headings":"","what":"Get demo directory of grobid XML files ‚Äî demodir","title":"Get demo directory of grobid XML files ‚Äî demodir","text":"Get demo directory grobid XML files","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/demodir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get demo directory of grobid XML files ‚Äî demodir","text":"","code":"demodir()"},{"path":"https://scienceverse.github.io/papercheck/reference/demodir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get demo directory of grobid XML files ‚Äî demodir","text":"paths","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/demodir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get demo directory of grobid XML files ‚Äî demodir","text":"","code":"demodir() #> [1] \"/home/runner/work/_temp/Library/papercheck/grobid\""},{"path":"https://scienceverse.github.io/papercheck/reference/demopdf.html","id":null,"dir":"Reference","previous_headings":"","what":"Get demo PDF file ‚Äî demopdf","title":"Get demo PDF file ‚Äî demopdf","text":"Get demo PDF file","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/demopdf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get demo PDF file ‚Äî demopdf","text":"","code":"demopdf()"},{"path":"https://scienceverse.github.io/papercheck/reference/demopdf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get demo PDF file ‚Äî demopdf","text":"vector paths","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/demopdf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get demo PDF file ‚Äî demopdf","text":"","code":"demopdf() #> [1] \"/home/runner/work/_temp/Library/papercheck/extdata/to_err_is_human.pdf\""},{"path":"https://scienceverse.github.io/papercheck/reference/demoxml.html","id":null,"dir":"Reference","previous_headings":"","what":"Get demo XML file ‚Äî demoxml","title":"Get demo XML file ‚Äî demoxml","text":"Get demo XML file","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/demoxml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get demo XML file ‚Äî demoxml","text":"","code":"demoxml()"},{"path":"https://scienceverse.github.io/papercheck/reference/demoxml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get demo XML file ‚Äî demoxml","text":"vector paths","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/demoxml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get demo XML file ‚Äî demoxml","text":"","code":"demoxml() #> [1] \"/home/runner/work/_temp/Library/papercheck/extdata/to_err_is_human.xml\""},{"path":"https://scienceverse.github.io/papercheck/reference/get_authors.html","id":null,"dir":"Reference","previous_headings":"","what":"Get author info from XML ‚Äî get_authors","title":"Get author info from XML ‚Äî get_authors","text":"Get author info XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_authors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get author info from XML ‚Äî get_authors","text":"","code":"get_authors(xml)"},{"path":"https://scienceverse.github.io/papercheck/reference/get_authors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get author info from XML ‚Äî get_authors","text":"xml grobid XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_authors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get author info from XML ‚Äî get_authors","text":"author list","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_doi.html","id":null,"dir":"Reference","previous_headings":"","what":"Get DOI info from XML ‚Äî get_doi","title":"Get DOI info from XML ‚Äî get_doi","text":"Get DOI info XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_doi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get DOI info from XML ‚Äî get_doi","text":"","code":"get_doi(xml)"},{"path":"https://scienceverse.github.io/papercheck/reference/get_doi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get DOI info from XML ‚Äî get_doi","text":"xml grobid XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_doi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get DOI info from XML ‚Äî get_doi","text":"DOI","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_full_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Add section info to full text table ‚Äî get_full_text","title":"Add section info to full text table ‚Äî get_full_text","text":"Add section info full text table","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_full_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add section info to full text table ‚Äî get_full_text","text":"","code":"get_full_text(xml, id = NULL)"},{"path":"https://scienceverse.github.io/papercheck/reference/get_full_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add section info to full text table ‚Äî get_full_text","text":"xml grobid XML id ID paper","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_full_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add section info to full text table ‚Äî get_full_text","text":"data frame classified full text","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_refs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get references from grobid XML ‚Äî get_refs","title":"Get references from grobid XML ‚Äî get_refs","text":"Get references grobid XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_refs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get references from grobid XML ‚Äî get_refs","text":"","code":"get_refs(xml)"},{"path":"https://scienceverse.github.io/papercheck/reference/get_refs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get references from grobid XML ‚Äî get_refs","text":"xml grobid XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_refs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get references from grobid XML ‚Äî get_refs","text":"list data frame referencesand data frame citation sentences","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_submission.html","id":null,"dir":"Reference","previous_headings":"","what":"Get submission info from XML ‚Äî get_submission","title":"Get submission info from XML ‚Äî get_submission","text":"Get submission info XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_submission.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get submission info from XML ‚Äî get_submission","text":"","code":"get_submission(xml)"},{"path":"https://scienceverse.github.io/papercheck/reference/get_submission.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get submission info from XML ‚Äî get_submission","text":"xml grobid XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/get_submission.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get submission info from XML ‚Äî get_submission","text":"submission","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/gpt.html","id":null,"dir":"Reference","previous_headings":"","what":"Query ChatGPT ‚Äî gpt","title":"Query ChatGPT ‚Äî gpt","text":"Ask ChatGPT question want text search_text()","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/gpt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query ChatGPT ‚Äî gpt","text":"","code":"gpt(   text,   query,   context = \"You are a scientist\",   text_col = \"text\",   group_by = \"id\",   CHATGPT_KEY = Sys.getenv(\"CHATGPT_KEY\"),   gpt_model = \"gpt-3.5-turbo-1106\",   chunk_size = 500,   chunk_overlap = 100,   temperature = 0,   include_query = FALSE )"},{"path":"https://scienceverse.github.io/papercheck/reference/gpt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query ChatGPT ‚Äî gpt","text":"text text send chatGPT (vector strings, data frame text column) query query ask chatGPT context context send chatGPT text_col name text column text data frame group_by column(s) group text data frame CHATGPT_KEY API key ChatGPT gpt_model model name pass ChatOpenAI chunk_size text chunk size embeddings chunk_overlap overlap text chunks embeddings temperature temperature value ChatGPT (0.0 2.0) include_query Whether include query context strings returned table","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/gpt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query ChatGPT ‚Äî gpt","text":"list results","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/gpt.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Query ChatGPT ‚Äî gpt","text":"need use ChatGPT API key. avoid type , add .Renviron file following format (can use usethis::edit_r_environ() access .Renviron file) CHATGPT_KEY=\"key_value_asdf\"","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/message.html","id":null,"dir":"Reference","previous_headings":"","what":"Less scary green messages ‚Äî message","title":"Less scary green messages ‚Äî message","text":"Less scary green messages","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Less scary green messages ‚Äî message","text":"","code":"message(..., domain = NULL, appendLF = TRUE)"},{"path":"https://scienceverse.github.io/papercheck/reference/message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Less scary green messages ‚Äî message","text":"... message components (see message) domain (see message) appendLF append new line? (see message)","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Less scary green messages ‚Äî message","text":"TRUE","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/ml.html","id":null,"dir":"Reference","previous_headings":"","what":"Machine Learning Classifier ‚Äî ml","title":"Machine Learning Classifier ‚Äî ml","text":"Machine Learning Classifier","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Machine Learning Classifier ‚Äî ml","text":"","code":"ml(   text,   model_dir,   class_col = \"classification\",   map = NULL,   text_col = \"text\",   return_prob = FALSE )"},{"path":"https://scienceverse.github.io/papercheck/reference/ml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Machine Learning Classifier ‚Äî ml","text":"text text classify model_dir directory model class_col name classification column map vector keys values (e.g., c(\"0\" = \"\", \"1\" = yes\")) text_col name text column text data frame return_prob whether return probability along classification","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/ml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Machine Learning Classifier ‚Äî ml","text":"data frame text classifications","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_find.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a module by name or path ‚Äî module_find","title":"Find a module by name or path ‚Äî module_find","text":"Find module name path","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_find.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a module by name or path ‚Äî module_find","text":"","code":"module_find(module)"},{"path":"https://scienceverse.github.io/papercheck/reference/module_find.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a module by name or path ‚Äî module_find","text":"module name module path module","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_find.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a module by name or path ‚Äî module_find","text":"path module","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List modules ‚Äî module_list","title":"List modules ‚Äî module_list","text":"List modules","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List modules ‚Äî module_list","text":"","code":"module_list(module_dir = system.file(\"modules\", package = \"papercheck\"))"},{"path":"https://scienceverse.github.io/papercheck/reference/module_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List modules ‚Äî module_list","text":"module_dir directory search modules (defaults built-modules)","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List modules ‚Äî module_list","text":"data frame modules","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List modules ‚Äî module_list","text":"","code":"module_list() #>  * ai-summarise: Generate a 1-sentence summary for each section #>  * all-p-values: List all p-values in the text, returning the matched text (e.g., 'p = 0.04') and document location in a table. #>  * all-urls: List all the URLs in the main text #>  * imprecise-p: List any p-values reported with insufficient precision (e.g., p < .05 or p = n.s.) #>  * marginal: List all sentences that describe an effect as 'marginally significant'. #>  * osf-check: List all OSF links and whether they are open, closed, or do not exist. #>  * ref-consistency: Check if all references are cited and all citations are referenced #>  * retractionwatch: Flag any cited papers in the RetractionWatch database #>  * statcheck: Check consistency of p-values and test statistics"},{"path":"https://scienceverse.github.io/papercheck/reference/module_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Report from module output ‚Äî module_report","title":"Report from module output ‚Äî module_report","text":"Report module output","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report from module output ‚Äî module_report","text":"","code":"module_report(module_output, header = 2)"},{"path":"https://scienceverse.github.io/papercheck/reference/module_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report from module output ‚Äî module_report","text":"module_output output module_run() header header level (default 2)","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report from module output ‚Äî module_report","text":"text","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report from module output ‚Äî module_report","text":"","code":"filename <- demoxml() paper <- read_grobid(filename) op <- module_run(paper, \"imprecise-p\") module_report(op) |> cat() #> ## Imprecise P-Values {.red} #>  #> You may have reported some imprecise p-values #>  #> |text    |section |header  | div|  p|  s| #> |:-------|:-------|:-------|---:|--:|--:| #> |p > .05 |results |Results |   3|  2|  2|"},{"path":"https://scienceverse.github.io/papercheck/reference/module_run.html","id":null,"dir":"Reference","previous_headings":"","what":"Run a module ‚Äî module_run","title":"Run a module ‚Äî module_run","text":"Run module","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a module ‚Äî module_run","text":"","code":"module_run(paper, module)"},{"path":"https://scienceverse.github.io/papercheck/reference/module_run.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a module ‚Äî module_run","text":"paper paper object list paper objects module name module path module run object","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a module ‚Äî module_run","text":"list returned table report text","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a module ‚Äî module_run","text":"","code":"filename <- demoxml() paper <- read_grobid(filename) module_run(paper, \"imprecise-p\") #> ### Imprecise P-Values {.red} #>  #> You may have reported some imprecise p-values #>  #> |text    |section |header  | div|  p|  s| #> |:-------|:-------|:-------|---:|--:|--:| #> |p > .05 |results |Results |   3|  2|  2|"},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_ai.html","id":null,"dir":"Reference","previous_headings":"","what":"Run AI module ‚Äî module_run_ai","title":"Run AI module ‚Äî module_run_ai","text":"Run AI module","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_ai.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run AI module ‚Äî module_run_ai","text":"","code":"module_run_ai(paper, args)"},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_ai.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run AI module ‚Äî module_run_ai","text":"paper scienceverse paper object (list object) args list argumentsto gpt()","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_ai.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run AI module ‚Äî module_run_ai","text":"data frame","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_code.html","id":null,"dir":"Reference","previous_headings":"","what":"Run code module ‚Äî module_run_code","title":"Run code module ‚Äî module_run_code","text":"Run code module","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_code.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run code module ‚Äî module_run_code","text":"","code":"module_run_code(paper, args, module_dir = \".\")"},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_code.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run code module ‚Äî module_run_code","text":"paper scienceverse paper object (list objects) args list arguments module_dir base directory module, case code files relative paths","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_code.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run code module ‚Äî module_run_code","text":"data frame","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_ml.html","id":null,"dir":"Reference","previous_headings":"","what":"Run machine learning module ‚Äî module_run_ml","title":"Run machine learning module ‚Äî module_run_ml","text":"Run machine learning module","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_ml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run machine learning module ‚Äî module_run_ml","text":"","code":"module_run_ml(paper, args, module_dir = \".\")"},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_ml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run machine learning module ‚Äî module_run_ml","text":"paper scienceverse paper object (list objects) args list arguments module_dir base directory module, case resources files relative paths","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_ml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run machine learning module ‚Äî module_run_ml","text":"data frame","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Run text module ‚Äî module_run_text","title":"Run text module ‚Äî module_run_text","text":"Run text module","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run text module ‚Äî module_run_text","text":"","code":"module_run_text(paper, args)"},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run text module ‚Äî module_run_text","text":"paper scienceverse paper object (list objects) args list arguments search_text()","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/module_run_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run text module ‚Äî module_run_text","text":"data frame","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/op-null-default.html","id":null,"dir":"Reference","previous_headings":"","what":"Default value for NULL ‚Äî op-null-default","title":"Default value for NULL ‚Äî op-null-default","text":"infix function makes easy replace NULLs default value. inspired way Ruby's operation (||) works.","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/op-null-default.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default value for NULL ‚Äî op-null-default","text":"","code":"x %||% y"},{"path":"https://scienceverse.github.io/papercheck/reference/op-null-default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Default value for NULL ‚Äî op-null-default","text":"x, y x NULL, return y; otherwise returns x.","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/op-null-default.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Default value for NULL ‚Äî op-null-default","text":"","code":"1 %||% 2 #> [1] 1 NULL %||% 2 #> [1] 2"},{"path":"https://scienceverse.github.io/papercheck/reference/openalex.html","id":null,"dir":"Reference","previous_headings":"","what":"Get OpenAlex info ‚Äî openalex","title":"Get OpenAlex info ‚Äî openalex","text":"Get OpenAlex info","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/openalex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get OpenAlex info ‚Äî openalex","text":"","code":"openalex(doi)"},{"path":"https://scienceverse.github.io/papercheck/reference/openalex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get OpenAlex info ‚Äî openalex","text":"doi DOI paper get info ","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/openalex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get OpenAlex info ‚Äî openalex","text":"list values","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/openalex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get OpenAlex info ‚Äî openalex","text":"","code":"doi <- \"10.7717/peerj.4375\" if (FALSE) { # \\dontrun{   oa_info <- openalex(doi) } # }"},{"path":"https://scienceverse.github.io/papercheck/reference/paper.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a paper object ‚Äî paper","title":"Create a paper object ‚Äî paper","text":"Create new paper object load paper PDF XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/paper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a paper object ‚Äî paper","text":"","code":"paper(name = \"Demo Paper\", ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/paper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a paper object ‚Äî paper","text":"name name study file path PDF grobid XML ... arguments add","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/paper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a paper object ‚Äî paper","text":"study object class scivrs_paper","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/paper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a paper object ‚Äî paper","text":"","code":"p <- paper(\"Demo Paper\")"},{"path":"https://scienceverse.github.io/papercheck/reference/papercheck_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Launch Shiny App ‚Äî papercheck_app","title":"Launch Shiny App ‚Äî papercheck_app","text":"Create meta-study file interactively shiny app runs locally RStudio web browser (recommended). connect web , data completely private.","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/papercheck_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Launch Shiny App ‚Äî papercheck_app","text":"","code":"papercheck_app(study = NULL, quiet = FALSE, ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/papercheck_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Launch Shiny App ‚Äî papercheck_app","text":"study optional study load quiet whether show debugging messages console ... arguments pass shiny::runApp","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/papercheck_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Launch Shiny App ‚Äî papercheck_app","text":"study object created edited app","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/papercheck_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Launch Shiny App ‚Äî papercheck_app","text":"","code":"if (FALSE)  s <- papercheck_app()  # \\dontrun{}"},{"path":"https://scienceverse.github.io/papercheck/reference/pdf2grobid.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a PDF to Grobid XML ‚Äî pdf2grobid","title":"Convert a PDF to Grobid XML ‚Äî pdf2grobid","text":"function uses public grobid server maintained Patrice Lopez. can set local grobid server following instructions https://grobid.readthedocs.io/ set argument grobid_url path (probably http://localhost:8070)","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/pdf2grobid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a PDF to Grobid XML ‚Äî pdf2grobid","text":"","code":"pdf2grobid(   filename,   save_path = \".\",   grobid_url = \"https://kermitt2-grobid.hf.space\" )"},{"path":"https://scienceverse.github.io/papercheck/reference/pdf2grobid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a PDF to Grobid XML ‚Äî pdf2grobid","text":"filename path PDF save_path directory file path save ; set NULL save temp file grobid_url URL grobid server","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/pdf2grobid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a PDF to Grobid XML ‚Äî pdf2grobid","text":"XML object","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_module_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Module List Object ‚Äî print.ppchk_module_list","title":"Print Module List Object ‚Äî print.ppchk_module_list","text":"Print Module List Object","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_module_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Module List Object ‚Äî print.ppchk_module_list","text":"","code":"# S3 method for class 'ppchk_module_list' print(x, ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_module_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Module List Object ‚Äî print.ppchk_module_list","text":"x ppchk_module_list object ... Additional parameters print","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_module_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Module Output ‚Äî print.ppchk_module_output","title":"Print Module Output ‚Äî print.ppchk_module_output","text":"Print Module Output","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_module_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Module Output ‚Äî print.ppchk_module_output","text":"","code":"# S3 method for class 'ppchk_module_output' print(x, ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_module_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Module Output ‚Äî print.ppchk_module_output","text":"x ppchk_module_output object ... Additional parameters print","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Validation List Object ‚Äî print.ppchk_validate","title":"Print Validation List Object ‚Äî print.ppchk_validate","text":"Print Validation List Object","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Validation List Object ‚Äî print.ppchk_validate","text":"","code":"# S3 method for class 'ppchk_validate' print(x, ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/print.ppchk_validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Validation List Object ‚Äî print.ppchk_validate","text":"x ppchk_validate object ... Additional parameters print","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/print.scivrs_paper.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Paper Object ‚Äî print.scivrs_paper","title":"Print Paper Object ‚Äî print.scivrs_paper","text":"Print Paper Object","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/print.scivrs_paper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Paper Object ‚Äî print.scivrs_paper","text":"","code":"# S3 method for class 'scivrs_paper' print(x, ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/print.scivrs_paper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Paper Object ‚Äî print.scivrs_paper","text":"x scivrs_paper list ... Additional parameters print","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Read file of unknown type ‚Äî read_file","title":"Read file of unknown type ‚Äî read_file","text":"Read file unknown type","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read file of unknown type ‚Äî read_file","text":"","code":"read_file(path)"},{"path":"https://scienceverse.github.io/papercheck/reference/read_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read file of unknown type ‚Äî read_file","text":"path path file","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read file of unknown type ‚Äî read_file","text":"data frame","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paper from grobid XML file ‚Äî read_grobid","title":"Get paper from grobid XML file ‚Äî read_grobid","text":"can create grobid XML file paper PDF https://huggingface.co/spaces/kermitt2/grobid.","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paper from grobid XML file ‚Äî read_grobid","text":"","code":"read_grobid(filename)"},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paper from grobid XML file ‚Äî read_grobid","text":"filename path XML file, vector file paths, path directory containing XML files","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paper from grobid XML file ‚Äî read_grobid","text":"paper object class scivrs_paper, list paper objects","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paper from grobid XML file ‚Äî read_grobid","text":"","code":"filename <- demoxml() paper <- read_grobid(filename)"},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid_xml.html","id":null,"dir":"Reference","previous_headings":"","what":"Read in grobid XML ‚Äî read_grobid_xml","title":"Read in grobid XML ‚Äî read_grobid_xml","text":"Read grobid XML","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid_xml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read in grobid XML ‚Äî read_grobid_xml","text":"","code":"read_grobid_xml(filename)"},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid_xml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read in grobid XML ‚Äî read_grobid_xml","text":"filename path XML file read","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_grobid_xml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read in grobid XML ‚Äî read_grobid_xml","text":"XML object","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paper from text ‚Äî read_text","title":"Get paper from text ‚Äî read_text","text":"Get paper text","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paper from text ‚Äî read_text","text":"","code":"read_text(txt, id = \"\")"},{"path":"https://scienceverse.github.io/papercheck/reference/read_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get paper from text ‚Äî read_text","text":"txt text read paper object, path text file id ID use paper (e.g., DOI) defaults filename txt path","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paper from text ‚Äî read_text","text":"paper object class scivrs_paper","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/read_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paper from text ‚Äî read_text","text":"","code":"paper <- read_text(\"This is my paper. That's it!\")"},{"path":"https://scienceverse.github.io/papercheck/reference/report.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a report ‚Äî report","title":"Create a report ‚Äî report","text":"Create report","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a report ‚Äî report","text":"","code":"report(   paper,   modules = c(\"imprecise-p\", \"marginal\", \"statcheck\", \"osf-check\", \"retractionwatch\",     \"ref-consistency\"),   output_file = paste0(paper$name, \"_report.\", output_format),   output_format = c(\"qmd\", \"html\", \"pdf\") )"},{"path":"https://scienceverse.github.io/papercheck/reference/report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a report ‚Äî report","text":"paper paper object modules vector modules run (names built-modules paths custom modules) output_file name output file output_format format create report ","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a report ‚Äî report","text":"file path report saved ","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a report ‚Äî report","text":"","code":"if (FALSE) { # \\dontrun{ filename <- demoxml() paper <- read_grobid(filename) report(paper) } # }"},{"path":"https://scienceverse.github.io/papercheck/reference/retractionwatch.html","id":null,"dir":"Reference","previous_headings":"","what":"RetractionWatch data ‚Äî retractionwatch","title":"RetractionWatch data ‚Äî retractionwatch","text":"DOIs nature statements RetractionWatch database (downloaded 2024-05-23)","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/retractionwatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RetractionWatch data ‚Äî retractionwatch","text":"","code":"retractionwatch"},{"path":"https://scienceverse.github.io/papercheck/reference/retractionwatch.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"RetractionWatch data ‚Äî retractionwatch","text":"data frame 44784 rows 2 columns: doi Document ID retractionwatch Nature note(s)","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/retractionwatch.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"RetractionWatch data ‚Äî retractionwatch","text":"https://api.labs.crossref.org/data/retractionwatch","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/search_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Search text ‚Äî search_text","title":"Search text ‚Äî search_text","text":"Search text paper list paper objects. Also works table results search_text() call.","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/search_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search text ‚Äî search_text","text":"","code":"search_text(   paper,   pattern = \".*\",   section = NULL,   return = c(\"sentence\", \"paragraph\", \"section\", \"match\"),   ignore.case = TRUE,   ... )"},{"path":"https://scienceverse.github.io/papercheck/reference/search_text.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search text ‚Äî search_text","text":"paper paper object list paper objects pattern regex pattern search section section(s) search return kind text return, full sentence, paragraph, section text , just (regex) match ignore.case whether ignore case text searching ... additional arguments pass grep() regexpr(), fixed = TRUE","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/search_text.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search text ‚Äî search_text","text":"data frame matches","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/search_text.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search text ‚Äî search_text","text":"","code":"filename <- demoxml() paper <- read_grobid(filename)  search_text(paper, \"p\\\\s*(=|<)\\\\s*[0-9\\\\.]+\", return = \"match\") #> # A tibble: 2 √ó 7 #>   text       section header    div     p     s id                  #>   <chr>      <chr>   <chr>   <dbl> <dbl> <int> <chr>               #> 1 p = 0.005. results Results     3     1     2 to_err_is_human.xml #> 2 p = 0.152. results Results     3     2     1 to_err_is_human.xml"},{"path":"https://scienceverse.github.io/papercheck/reference/set_gpt_max_calls.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the maximum number of calls to ChatGPT ‚Äî set_gpt_max_calls","title":"Set the maximum number of calls to ChatGPT ‚Äî set_gpt_max_calls","text":"Set maximum number calls ChatGPT","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/set_gpt_max_calls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the maximum number of calls to ChatGPT ‚Äî set_gpt_max_calls","text":"","code":"set_gpt_max_calls(n = 10)"},{"path":"https://scienceverse.github.io/papercheck/reference/set_gpt_max_calls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the maximum number of calls to ChatGPT ‚Äî set_gpt_max_calls","text":"n maximum number calls ChatGPT gpt() function can make","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/site_down.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if site is available ‚Äî site_down","title":"Check if site is available ‚Äî site_down","text":"Check site available","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/site_down.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if site is available ‚Äî site_down","text":"","code":"site_down(url, msg = \"The website %s is not available\", error = TRUE)"},{"path":"https://scienceverse.github.io/papercheck/reference/site_down.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if site is available ‚Äî site_down","text":"url URL check msg message contains %s replace site name error Throw error site ; otherwise return logical","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/site_down.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if site is available ‚Äî site_down","text":"logical","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Stats ‚Äî stats","title":"Check Stats ‚Äî stats","text":"Check Stats","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Stats ‚Äî stats","text":"","code":"stats(text, ...)"},{"path":"https://scienceverse.github.io/papercheck/reference/stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Stats ‚Äî stats","text":"text search table (list scienceverse paper objects) ... arguments pass statcheck()","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Stats ‚Äî stats","text":"table statistics","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Stats ‚Äî stats","text":"","code":"filename <- demoxml() papers <- read_grobid(filename) stats(papers) #>   test_type df1  df2 test_comp test_value p_comp reported_p  computed_p #> 1         t  NA 97.7         =       2.90      =      0.005 0.004609391 #> 2         t  NA 97.2         =      -1.96      =      0.152 0.052859364 #>                          raw error decision_error one_tailed_in_txt apa_factor #> 1   t(97.7) = 2.9, p = 0.005 FALSE          FALSE             FALSE          1 #> 2 t(97.2) = -1.96, p = 0.152  TRUE          FALSE             FALSE          1 #>                                                                                                                                                                                                                      text #> 1                                   On average researchers in the experimental (app) condition made fewer mistakes (M = 9.12) than researchers in the control (checklist) condition (M = 10.9), t(97.7) = 2.9, p = 0.005. #> 2 On average researchers in the experimental condition found the app marginally significantly more useful (M = 5.06) than researchers in the control condition found the checklist (M = 4.5), t(97.2) = -1.96, p = 0.152. #>   section  header div p s                  id #> 1 results Results   3 1 2 to_err_is_human.xml #> 2 results Results   3 2 1 to_err_is_human.xml"},{"path":"https://scienceverse.github.io/papercheck/reference/validate.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate a module ‚Äî validate","title":"Validate a module ‚Äî validate","text":"Validate module","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/validate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate a module ‚Äî validate","text":"","code":"validate(module, sample, results_table = \"table\", path = NULL)"},{"path":"https://scienceverse.github.io/papercheck/reference/validate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate a module ‚Äî validate","text":"module name module path module sample data frame path tabular data file (csv excel) sample validate , columns xml, table, report, traffic_light results_table column name match module results table , data frame path file contains info tabular form path base directory relative paths sample table; NULL sample file path, use base directory file","code":""},{"path":"https://scienceverse.github.io/papercheck/reference/validate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate a module ‚Äî validate","text":"validation list object","code":""}]
